using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace AllenCopeland.Abstraction
{
    internal enum ArgumentWithException
    {
        argument,
        array,
        e,
        genericParameters,
        genericType,
        identifier,
        index,
        items,
        key,
        length,
        methodReplacements,
        name,
        nameAndDelegateType,
        nameAndType,
        @namespace,
        owner,
        searchCriteria,
        series,
        signature,
        sizes,
        target,
        TAssembly,
        typeParameters,
        typeReplacements,
        typeSymbol,
        value,
    }
    internal enum ArgumentExceptionMessage
    {
        UnknownArgument,
        ManifestModuleTarget,
        ArgumentCannotBeEmpty,
        PathCannotBeDotsOnly,
        NamespacePathAlreadyPresent,
        EntityAssemblyIsFixed,
        DuplicateKeyExists,
        GenericParameterRequiresName,
        NamedGenericParameterExists,
        ElementTypeMustBeGivenKind,
        TypeMustBeCompilerGenerated,
        TypeMustBeSealedClass,
        TypeMustBeGenericParameter,
        MemberOfSeriesNull,
        ValueIsWrongType,
        SubordinateCannotChange,
        NumericControllerMismatch,
        NumericValueParseError,
        SourceStringInvalid,
        InvalidTCheckDerivation,
        TransitionKeyCollision,
        TypedName_ImplicitConversion,
        TypedName_Invalid,
        TypedName_InvalidElement,
        TypedName_ReferenceKind,
        CompiledType_NotProperKind,
        CompiledType_AttrColl_Parent,
        SubordinateDoesNotExist,
        SubordinateNull,
        SubordinateInvalid,
        CoercionDoesNotExist,
        TypeNotGivenKind,
        TypeNotGeneric,
        TypeAlreadyGenericClosure,
        NonNullableTypeProvided,
        GenericClosureReplacementCount,
        InsufficientSpaceForCopy,
        DetachedExpressionNotValidFor,
        ProvidedExpressionCannotBe,
        OperationMustBeTerm,
        CannotTermBinaryOperation,
        OnlyNullableOnTerm,
        RelationalInvalidOnExpression,
        RemoveFailed_CustomAttributeNotFound,
        Primitive_NonStringObject,
        Primitive_Invalid,
        Part_CannotBeRoot,
        Part_MustReferenceRoot,
        ParentMustBeEqual,
    }
}
