 /* ----------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.  |
 |  Version: 0.5.0.0                                          |
 |------------------------------------------------------------|
 |  To ensure the code works properly,                        |
 |  please do not make any changes to the file.               |
 |------------------------------------------------------------|
 |  The specific language is C♯                               |
 |  Sub-tool Name: C♯ Code Translator                         |
 |  Sub-tool Version: 1.0.0.0                                 |
 \---------------------------------------------------------- */
using AllenCopeland.Abstraction.Slf.Cli.Metadata;
using AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables;
using System;
namespace AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables
{
    internal class CliMetadataMethodImplLockedTableRow :
        ICliMetadataMethodImplTableRow
    {
        /// <summary>
        /// Data member for <see cref="Index"/>.
        /// </summary>
        private uint index;
        private ICliMetadataRoot metadataRoot;
        /// <summary>
        /// Data member for <see cref="Class"/>.
        /// </summary>
        private uint classIndex;
        /// <summary>
        /// Data member for <see cref="MethodBody"/>.
        /// </summary>
        private uint methodBodyIndex;
        private CliMetadataMethodDefOrRefTag methodBodySource;
        /// <summary>
        /// Data member for <see cref="MethodDeclaration"/>.
        /// </summary>
        private uint methodDeclarationIndex;
        private CliMetadataMethodDefOrRefTag methodDeclarationSource;
        /// <summary>
        /// Data member which denotes the state of the row, used to calculate the size of the
        /// <see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables.CliMetadataMethodImplTableReader"/>
        /// </summary>
        private byte state;
        /// <summary>
        /// Returns the index of the row within the <see cref="CliMetadataMethodImplTableReader"/>
        /// since the rows from the containing table are referenced by other tables.
        /// </summary>
        public uint Index
        {
            get
            {
                return this.index;
            }
        }
        /// <summary>
        /// Returns the root of the metadata from which the current <see cref="CliMetadataMethodImplLockedTableRow"/>
        /// was derived.
        /// </summary>
        public ICliMetadataRoot MetadataRoot
        {
            get
            {
                return this.metadataRoot;
            }
        }
        public uint ClassIndex
        {
            get
            {
                return this.classIndex;
            }
        }
        public ICliMetadataTypeDefinitionTableRow Class
        {
            get
            {
                return this.metadataRoot.TableStream.TypeDefinitionTable[((int)(this.classIndex))];
            }
        }
        public ICliMetadataMethodDefOrRefRow MethodBody
        {
            get
            {
                if (this.methodBodyIndex == 0)
                    return null;
                switch (this.methodBodySource)
                {
                    case CliMetadataMethodDefOrRefTag.MemberRef:
                        return this.metadataRoot.TableStream.MemberReferenceTable[((int)(this.methodBodyIndex))];
                    case CliMetadataMethodDefOrRefTag.MethodDefinition:
                        return this.metadataRoot.TableStream.MethodDefinitionTable[((int)(this.methodBodyIndex))];
                }
                return null;
            }
        }
        /// <summary>
        /// Returns the decoded index of the <see cref="MethodBody"/> relative to the appropriate
        /// table.
        /// </summary>
        /// <remarks>
        /// Refer to <see cref="MethodBodySource"/> to discern the proper table for <see cref="MethodBodyIndex"/>
        /// </remarks>
        public uint MethodBodyIndex
        {
            get
            {
                return this.methodBodyIndex;
            }
        }
        /// <summary>
        /// Returns the <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag"/>
        /// which determines the table that <see cref="MethodBodyIndex"/> refers to.
        /// </summary>
        /// <remarks>
        /// <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag"/>
        /// encoding <see cref="CliMetadataTableStreamAndHeader"/> tables:<list type="table"><listheader><term>Encoding</term><description>TableStream
        /// Property</description></listheader><item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag.MemberRef"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.MemberReferenceTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag.MethodDefinition"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.MethodDefinitionTable"/></description></item>
        /// </list>
        /// </remarks>
        public CliMetadataMethodDefOrRefTag MethodBodySource
        {
            get
            {
                return this.methodBodySource;
            }
        }
        public ICliMetadataMethodDefOrRefRow MethodDeclaration
        {
            get
            {
                if (this.methodDeclarationIndex == 0)
                    return null;
                switch (this.methodDeclarationSource)
                {
                    case CliMetadataMethodDefOrRefTag.MemberRef:
                        return this.metadataRoot.TableStream.MemberReferenceTable[((int)(this.methodDeclarationIndex))];
                    case CliMetadataMethodDefOrRefTag.MethodDefinition:
                        return this.metadataRoot.TableStream.MethodDefinitionTable[((int)(this.methodDeclarationIndex))];
                }
                return null;
            }
        }
        /// <summary>
        /// Returns the decoded index of the <see cref="MethodDeclaration"/> relative to the appropriate
        /// table.
        /// </summary>
        /// <remarks>
        /// Refer to <see cref="MethodDeclarationSource"/> to discern the proper table for <see cref="MethodDeclarationIndex"/>
        /// </remarks>
        public uint MethodDeclarationIndex
        {
            get
            {
                return this.methodDeclarationIndex;
            }
        }
        /// <summary>
        /// Returns the <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag"/>
        /// which determines the table that <see cref="MethodDeclarationIndex"/> refers to.
        /// </summary>
        /// <remarks>
        /// <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag"/>
        /// encoding <see cref="CliMetadataTableStreamAndHeader"/> tables:<list type="table"><listheader><term>Encoding</term><description>TableStream
        /// Property</description></listheader><item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag.MemberRef"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.MemberReferenceTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataMethodDefOrRefTag.MethodDefinition"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.MethodDefinitionTable"/></description></item>
        /// </list>
        /// </remarks>
        public CliMetadataMethodDefOrRefTag MethodDeclarationSource
        {
            get
            {
                return this.methodDeclarationSource;
            }
        }
        public int Size
        {
            get
            {
                switch (this.state)
                {
                    case 1:
                        return CliMetadataMethodImplTableReader.__COR_METHODIMPL_CALC_SIZE_2__;
                    case 2:
                        return CliMetadataMethodImplTableReader.__COR_METHODIMPL_CALC_SIZE_3__;
                    case 3:
                        return CliMetadataMethodImplTableReader.__COR_METHODIMPL_CALC_SIZE_4__;
                }
                return CliMetadataMethodImplTableReader.__COR_METHODIMPL_CALC_SIZE_1__;
            }
        }
        internal CliMetadataMethodImplLockedTableRow(uint index, byte state, ICliMetadataRoot metadataRoot, uint classIndex, CliMetadataMethodDefOrRefTag methodBodySource, uint methodBodyIndex, CliMetadataMethodDefOrRefTag methodDeclarationSource, uint methodDeclarationIndex)
        {
            this.index = index;
            this.metadataRoot = metadataRoot;
            this.state = state;
            this.classIndex = classIndex;
            this.methodBodySource = methodBodySource;
            this.methodBodyIndex = methodBodyIndex;
            this.methodDeclarationSource = methodDeclarationSource;
            this.methodDeclarationIndex = methodDeclarationIndex;
        }
    };
};
