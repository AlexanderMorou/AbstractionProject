 /* ----------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.  |
 |  Version: 0.5.0.0                                          |
 |------------------------------------------------------------|
 |  To ensure the code works properly,                        |
 |  please do not make any changes to the file.               |
 |------------------------------------------------------------|
 |  The specific language is C♯                               |
 |  Sub-tool Name: C♯ Code Translator                         |
 |  Sub-tool Version: 1.0.0.0                                 |
 \---------------------------------------------------------- */
using AllenCopeland.Abstraction.Slf.Cli.Metadata;
using AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables;
using System;
namespace AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables
{
    /// <summary>
    /// Provides a locked row class for a locked table which defines semantic information
    /// about a method.
    /// </summary>
    internal class CliMetadataMethodSemanticsLockedTableRow :
        ICliMetadataMethodSemanticsTableRow
    {
        /// <summary>
        /// Data member for <see cref="Index"/>.
        /// </summary>
        private uint index;
        private ICliMetadataRoot metadataRoot;
        /// <summary>
        /// Data member for <see cref="Semantics"/>.
        /// </summary>
        private MethodSemanticsAttributes semantics;
        /// <summary>
        /// Data member for <see cref="Method"/>.
        /// </summary>
        private uint methodIndex;
        /// <summary>
        /// Data member for <see cref="Association"/>.
        /// </summary>
        private uint associationIndex;
        private CliMetadataHasSemanticsTag associationSource;
        /// <summary>
        /// Data member which denotes the state of the row, used to calculate the size of the
        /// <see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables.CliMetadataMethodSemanticsTableReader"/>
        /// </summary>
        private byte state;
        /// <summary>
        /// Returns the index of the row within the <see cref="CliMetadataMethodSemanticsTableReader"/>
        /// since the rows from the containing table are referenced by other tables.
        /// </summary>
        public uint Index
        {
            get
            {
                return this.index;
            }
        }
        /// <summary>
        /// Returns the root of the metadata from which the current <see cref="CliMetadataMethodSemanticsLockedTableRow"/>
        /// was derived.
        /// </summary>
        public ICliMetadataRoot MetadataRoot
        {
            get
            {
                return this.metadataRoot;
            }
        }
        /// <summary>
        /// Returns whether the method belongs to a property or event.
        /// </summary>
        public MethodSemanticsAttributes Semantics
        {
            get
            {
                return this.semantics;
            }
        }
        public uint MethodIndex
        {
            get
            {
                return this.methodIndex;
            }
        }
        /// <summary>
        /// Returns the target method of the semantics.
        /// </summary>
        public ICliMetadataMethodDefinitionTableRow Method
        {
            get
            {
                return this.metadataRoot.TableStream.MethodDefinitionTable[((int)(this.methodIndex))];
            }
        }
        /// <summary>
        /// Returns the decoded index of the Association relative to the appropriate table.
        /// </summary>
        /// <remarks>
        /// Refer to <see cref="AssociationSource"/> to discern the proper table for <see cref="AssociationIndex"/>
        /// </remarks>
        public uint AssociationIndex
        {
            get
            {
                return this.associationIndex;
            }
        }
        /// <summary>
        /// Returns the <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataHasSemanticsTag"/>
        /// which determines the table that <see cref="AssociationIndex"/> refers to.
        /// </summary>
        /// <remarks>
        /// <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataHasSemanticsTag"/>
        /// encoding <see cref="CliMetadataTableStreamAndHeader"/> tables:<list type="table"><listheader><term>Encoding</term><description>TableStream
        /// Property</description></listheader><item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataHasSemanticsTag.Event"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.EventTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataHasSemanticsTag.Property"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.PropertyTable"/></description></item>
        /// </list>
        /// </remarks>
        public CliMetadataHasSemanticsTag AssociationSource
        {
            get
            {
                return this.associationSource;
            }
        }
        public int Size
        {
            get
            {
                switch (this.state)
                {
                    case 1: case 2:
                        return CliMetadataMethodSemanticsTableReader.__COR_METHODSEMANTICS_CALC_SIZE_2__;
                    case 3:
                        return CliMetadataMethodSemanticsTableReader.__COR_METHODSEMANTICS_CALC_SIZE_3__;
                }
                return CliMetadataMethodSemanticsTableReader.__COR_METHODSEMANTICS_CALC_SIZE_1__;
            }
        }
        internal CliMetadataMethodSemanticsLockedTableRow(uint index, byte state, ICliMetadataRoot metadataRoot, MethodSemanticsAttributes semantics, uint methodIndex, CliMetadataHasSemanticsTag associationSource, uint associationIndex)
        {
            this.index = index;
            this.metadataRoot = metadataRoot;
            this.state = state;
            this.semantics = semantics;
            this.methodIndex = methodIndex;
            this.associationSource = associationSource;
            this.associationIndex = associationIndex;
        }
    };
};
