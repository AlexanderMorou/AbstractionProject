 /* ----------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.  |
 |  Version: 0.5.0.0                                          |
 |------------------------------------------------------------|
 |  To ensure the code works properly,                        |
 |  please do not make any changes to the file.               |
 |------------------------------------------------------------|
 |  The specific language is C♯                               |
 |  Sub-tool Name: C♯ Code Translator                         |
 |  Sub-tool Version: 1.0.0.0                                 |
 \---------------------------------------------------------- */
using AllenCopeland.Abstraction.Slf.Cli.Metadata;
using AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables;
using System;
namespace AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables
{
    internal class CliMetadataGenericParamConstraintLockedTableRow :
        ICliMetadataGenericParamConstraintTableRow
    {
        /// <summary>
        /// Data member for <see cref="Index"/>.
        /// </summary>
        private uint index;
        private ICliMetadataRoot metadataRoot;
        /// <summary>
        /// Data member for <see cref="Owner"/>.
        /// </summary>
        private uint ownerIndex;
        /// <summary>
        /// Data member for <see cref="Constraint"/>.
        /// </summary>
        private uint constraintIndex;
        private CliMetadataTypeDefOrRefTag constraintSource;
        /// <summary>
        /// Data member which denotes the state of the row, used to calculate the size of the
        /// <see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables.CliMetadataGenericParamConstraintTableReader"/>
        /// </summary>
        private byte state;
        /// <summary>
        /// Returns the index of the row within the <see cref="CliMetadataGenericParamConstraintTableReader"/>
        /// since the rows from the containing table are referenced by other tables.
        /// </summary>
        public uint Index
        {
            get
            {
                return this.index;
            }
        }
        /// <summary>
        /// Returns the root of the metadata from which the current <see cref="CliMetadataGenericParamConstraintLockedTableRow"/>
        /// was derived.
        /// </summary>
        public ICliMetadataRoot MetadataRoot
        {
            get
            {
                return this.metadataRoot;
            }
        }
        public uint OwnerIndex
        {
            get
            {
                return this.ownerIndex;
            }
        }
        public ICliMetadataGenericParameterTableRow Owner
        {
            get
            {
                return this.metadataRoot.TableStream.GenericParameterTable[((int)(this.ownerIndex))];
            }
        }
        public ICliMetadataTypeDefOrRefRow Constraint
        {
            get
            {
                if (this.constraintIndex == 0)
                    return null;
                switch (this.constraintSource)
                {
                    case CliMetadataTypeDefOrRefTag.TypeDefinition:
                        return this.metadataRoot.TableStream.TypeDefinitionTable[((int)(this.constraintIndex))];
                    case CliMetadataTypeDefOrRefTag.TypeReference:
                        return this.metadataRoot.TableStream.TypeRefTable[((int)(this.constraintIndex))];
                    case CliMetadataTypeDefOrRefTag.TypeSpecification:
                        return this.metadataRoot.TableStream.TypeSpecificationTable[((int)(this.constraintIndex))];
                }
                return null;
            }
        }
        /// <summary>
        /// Returns the decoded index of the <see cref="Constraint"/> relative to the appropriate
        /// table.
        /// </summary>
        /// <remarks>
        /// Refer to <see cref="ConstraintSource"/> to discern the proper table for <see cref="ConstraintIndex"/>
        /// </remarks>
        public uint ConstraintIndex
        {
            get
            {
                return this.constraintIndex;
            }
        }
        /// <summary>
        /// Returns the <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag"/>
        /// which determines the table that <see cref="ConstraintIndex"/> refers to.
        /// </summary>
        /// <remarks>
        /// <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag"/>
        /// encoding <see cref="CliMetadataTableStreamAndHeader"/> tables:<list type="table"><listheader><term>Encoding</term><description>TableStream
        /// Property</description></listheader><item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag.TypeDefinition"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.TypeDefinitionTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag.TypeReference"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.TypeRefTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag.TypeSpecification"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.TypeSpecificationTable"/></description></item>
        /// </list>
        /// </remarks>
        public CliMetadataTypeDefOrRefTag ConstraintSource
        {
            get
            {
                return this.constraintSource;
            }
        }
        public int Size
        {
            get
            {
                switch (this.state)
                {
                    case 1: case 2:
                        return CliMetadataGenericParamConstraintTableReader.__COR_GENERICPARAMCONSTRAINT_CALC_SIZE_2__;
                    case 3:
                        return CliMetadataGenericParamConstraintTableReader.__COR_GENERICPARAMCONSTRAINT_CALC_SIZE_3__;
                }
                return CliMetadataGenericParamConstraintTableReader.__COR_GENERICPARAMCONSTRAINT_CALC_SIZE_1__;
            }
        }
        internal CliMetadataGenericParamConstraintLockedTableRow(uint index, byte state, ICliMetadataRoot metadataRoot, uint ownerIndex, CliMetadataTypeDefOrRefTag constraintSource, uint constraintIndex)
        {
            this.index = index;
            this.metadataRoot = metadataRoot;
            this.state = state;
            this.ownerIndex = ownerIndex;
            this.constraintSource = constraintSource;
            this.constraintIndex = constraintIndex;
        }
    };
};
