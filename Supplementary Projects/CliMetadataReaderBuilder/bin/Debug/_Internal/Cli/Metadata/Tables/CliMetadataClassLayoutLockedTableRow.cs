 /* ----------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.  |
 |  Version: 0.5.0.0                                          |
 |------------------------------------------------------------|
 |  To ensure the code works properly,                        |
 |  please do not make any changes to the file.               |
 |------------------------------------------------------------|
 |  The specific language is C♯                               |
 |  Sub-tool Name: C♯ Code Translator                         |
 |  Sub-tool Version: 1.0.0.0                                 |
 \---------------------------------------------------------- */
using AllenCopeland.Abstraction.Slf.Cli.Metadata;
using AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables;
using System;
namespace AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables
{
    /// <summary>
    /// Provides a locked row class for a locked table which defines information about the
    /// data size and packing size of a type.
    /// </summary>
    internal class CliMetadataClassLayoutLockedTableRow :
        ICliMetadataClassLayoutTableRow
    {
        private ICliMetadataRoot metadataRoot;
        /// <summary>
        /// Data member for <see cref="PackingSize"/>.
        /// </summary>
        private ushort packingSize;
        /// <summary>
        /// Data member for <see cref="ClassSize"/>.
        /// </summary>
        private uint classSize;
        /// <summary>
        /// Data member for <see cref="Parent"/>.
        /// </summary>
        private uint parentIndex;
        /// <summary>
        /// Data member which denotes the state of the row, used to calculate the size of the
        /// <see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Tables.CliMetadataClassLayoutTableReader"/>
        /// </summary>
        private byte state;
        /// <summary>
        /// Returns the root of the metadata from which the current <see cref="CliMetadataClassLayoutLockedTableRow"/>
        /// was derived.
        /// </summary>
        public ICliMetadataRoot MetadataRoot
        {
            get
            {
                return this.metadataRoot;
            }
        }
        public ushort PackingSize
        {
            get
            {
                return this.packingSize;
            }
        }
        public uint ClassSize
        {
            get
            {
                return this.classSize;
            }
        }
        public uint ParentIndex
        {
            get
            {
                return this.parentIndex;
            }
        }
        public int Size
        {
            get
            {
                switch (this.state)
                {
                    case 1:
                        return CliMetadataClassLayoutTableReader.__COR_CLASSLAYOUT_CALC_SIZE_2__;
                }
                return CliMetadataClassLayoutTableReader.__COR_CLASSLAYOUT_CALC_SIZE_1__;
            }
        }
        public override string ToString()
        {
            return string.Format("ClassLayout: PackingSize = {0}, ClassSize = {1}", this.PackingSize, this.ClassSize);
        }
        internal CliMetadataClassLayoutLockedTableRow(byte state, ICliMetadataRoot metadataRoot, ushort packingSize, uint classSize, uint parentIndex)
        {
            this.metadataRoot = metadataRoot;
            this.state = state;
            this.packingSize = packingSize;
            this.classSize = classSize;
            this.parentIndex = parentIndex;
        }
    };
};
