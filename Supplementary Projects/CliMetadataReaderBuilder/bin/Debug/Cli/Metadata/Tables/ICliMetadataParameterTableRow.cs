 /* ----------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.  |
 |  Version: 0.5.0.0                                          |
 |------------------------------------------------------------|
 |  To ensure the code works properly,                        |
 |  please do not make any changes to the file.               |
 |------------------------------------------------------------|
 |  The specific language is C♯                               |
 |  Sub-tool Name: C♯ Code Translator                         |
 |  Sub-tool Version: 1.0.0.0                                 |
 \---------------------------------------------------------- */
using AllenCopeland.Abstraction.Utilities.Collections;
using System;
using System.Reflection;
namespace AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables
{
    /// <summary>
    /// Defines properties and methods for a locked row in a table which defines information
    /// about the parameters defined within the image.
    /// </summary>
    public interface ICliMetadataParameterTableRow :
        ICliMetadataTableRow, 
        ICliMetadataHasConstantRow, 
        ICliMetadataHasCustomAttributeRow, 
        ICliMetadataHasFieldMarshalRow, 
        ICliMetadataIndexedRow
    {
        /// <summary>
        /// Returns conditional information about the parameter, whether it's optional, has marshaling
        /// applied to it, and/or the direction in which the parameter's data is coerced.
        /// </summary>
        ParameterAttributes Flags { get; }
        /// <summary>
        /// Returns the ordinal index of the parameter within the sequence of parameters for a
        /// given method.
        /// </summary>
        /// <remarks>
        /// Gaps in Sequence are allowed; however, the value of sequence from one parameter to
        /// the next must be in increasing value.  Parameter with sequence index zero refers to
        /// the method's return type.
        /// </remarks>
        ushort Sequence { get; }
        ICliMetadataRoot MetadataRoot { get; }
        string Name { get; }
        uint NameIndex { get; }
        IControlledCollection<ICliMetadataCustomAttributeTableRow> CustomAttributes { get; }
    };
};
