 /* ----------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.  |
 |  Version: 0.5.0.0                                          |
 |------------------------------------------------------------|
 |  To ensure the code works properly,                        |
 |  please do not make any changes to the file.               |
 |------------------------------------------------------------|
 |  The specific language is C♯                               |
 |  Sub-tool Name: C♯ Code Translator                         |
 |  Sub-tool Version: 1.0.0.0                                 |
 \---------------------------------------------------------- */
using AllenCopeland.Abstraction.Utilities.Collections;
using System;
using System.Reflection;
namespace AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables
{
    /// <summary>
    /// Defines properties and methods for a locked row in a table which defines the information
    /// about the types within the image's metadata.
    /// </summary>
    public interface ICliMetadataTypeDefinitionTableRow :
        ICliMetadataTableRow, 
        ICliMetadataTypeDefOrRefRow, 
        ICliMetadataHasCustomAttributeRow, 
        ICliMetadataHasDeclSecurityRow, 
        ICliMetadataMemberRefParentRow, 
        ICliMetadataTypeOrMethodDefRow, 
        ICliMetadataIndexedRow
    {
        /// <summary>
        /// Returns the <see cref="TypeAttributes"/> which denote information about the type's
        /// structure.
        /// </summary>
        TypeAttributes TypeAttributes { get; }
        /// <summary>
        /// Returns the namespace of the defined type.
        /// </summary>
        string Namespace { get; }
        /// <summary>
        /// Returns the index onto the <see cref="CliMetadataRoot.StringsHeap"/> from which <see cref="Namespace"/>
        /// is derived.
        /// </summary>
        uint NamespaceIndex { get; }
        /// <summary>
        /// Returns the <see cref="ICliMetadataTypeDefOrRefRow"/> from which the type derives.
        /// </summary>
        ICliMetadataTypeDefOrRefRow Extends { get; }
        /// <summary>
        /// Returns the decoded index of the <see cref="Extends"/> relative to the appropriate
        /// table.
        /// </summary>
        /// <remarks>
        /// Refer to <see cref="ExtendsSource"/> to discern the proper table for <see cref="ExtendsIndex"/>
        /// </remarks>
        uint ExtendsIndex { get; }
        /// <summary>
        /// Returns the <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag"/>
        /// which determines the table that <see cref="ExtendsIndex"/> refers to.
        /// </summary>
        /// <remarks>
        /// <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag"/>
        /// encoding <see cref="CliMetadataTableStreamAndHeader"/> tables:<list type="table"><listheader><term>Encoding</term><description>TableStream
        /// Property</description></listheader><item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag.TypeDefinition"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.TypeDefinitionTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag.TypeReference"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.TypeRefTable"/></description></item>
        /// <item><term><see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.CliMetadataTypeDefOrRefTag.TypeSpecification"/></term><description><see cref="AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.CliMetadataTableStreamAndHeader.TypeSpecificationTable"/></description></item>
        /// </list>
        /// </remarks>
        CliMetadataTypeDefOrRefTag ExtendsSource { get; }
        /// <summary>
        /// Returns the <see cref="UInt32"/> value which determines the index of the first <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables.ICliMetadataFieldTableRow"/>
        /// within <see cref="Fields"/>
        /// </summary>
        uint FieldStartIndex { get; }
        /// <summary>
        /// Returns the <see cref="UInt32"/> value which determines the index of the first <see cref="AllenCopeland.Abstraction.Slf.Cli.Metadata.Tables.ICliMetadataMethodDefinitionTableRow"/>
        /// within <see cref="Methods"/>
        /// </summary>
        uint MethodStartIndex { get; }
        /// <summary>
        /// Returns a set of <see cref="ICliMetadataInterfaceImplTableRow"/> which are associated
        /// to the <see cref="ICliMetadataTypeDefinitionTableRow"/>.
        /// </summary>
        /// <remarks>
        /// Created through references from the <see cref="ICliMetadataInterfaceImplTable"/>.
        /// </remarks>
        IControlledCollection<ICliMetadataInterfaceImplTableRow> ImplementedInterfaces { get; }
        /// <summary>
        /// Returns the set of implementation mappings related to a class' implemented interfaces.
        /// </summary>
        /// <remarks>
        /// Created through references from the <see cref="ICliMetadataMethodImplTable"/>.
        /// </remarks>
        IControlledCollection<ICliMetadataMethodImplTableRow> ImplementationMap { get; }
        /// <summary>
        /// Returns the nested types for the current type.
        /// </summary>
        /// <remarks>
        /// Created through references from the <see cref="ICliMetadataNestedClassTable"/>.
        /// </remarks>
        IControlledCollection<ICliMetadataTypeDefinitionTableRow> NestedClasses { get; }
        /// <summary>
        /// Returns returns the events for the current type definition.
        /// </summary>
        IControlledCollection<ICliMetadataEventTableRow> Events { get; }
        /// <summary>
        /// Returns returns the properties for the current type definition.
        /// </summary>
        IControlledCollection<ICliMetadataPropertyTableRow> Properties { get; }
        /// <summary>
        /// Returns returns the fields for the current type.
        /// </summary>
        IControlledCollection<ICliMetadataFieldTableRow> Fields { get; }
        /// <summary>
        /// Returns returns the methods for the current type.
        /// </summary>
        IControlledCollection<ICliMetadataMethodDefinitionTableRow> Methods { get; }
        /// <summary>
        /// Returns the class layout information which determines the data and packing size of
        /// the type.
        /// </summary>
        /// <remarks>
        /// Can be null.
        /// </remarks>
        ICliMetadataClassLayoutTableRow Layout { get; }
        /// <summary>
        /// Returns the type which declares the current type.
        /// </summary>
        /// <remarks>
        /// Can be null.
        /// </remarks>
        ICliMetadataTypeDefinitionTableRow DeclaringType { get; }
        ICliMetadataRoot MetadataRoot { get; }
        IControlledCollection<ICliMetadataCustomAttributeTableRow> CustomAttributes { get; }
        string Name { get; }
        uint NameIndex { get; }
    };
};
