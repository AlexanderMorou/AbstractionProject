using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.CompilerServices;
 /*---------------------------------------------------------------------\
 | Copyright © 2011 Allen Copeland Jr.                                  |
 |----------------------------------------------------------------------|
 | The Abstraction Project's code is provided under a contract-release  |
 | basis.  DO NOT DISTRIBUTE and do not use beyond the contract terms.  |
 \-------------------------------------------------------------------- */

namespace AllenCopeland.Abstraction.Slf.Compilers
{
    [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false)]
    public class GlobalMemberContainerAttribute :
        Attribute
    {
        /// <summary>
        /// Creates a new <see cref="GlobalFieldContainerAttribute"/>
        /// which denotes the <paramref name="globalMemberType"/>
        /// which contains the members that have global visibility.
        /// </summary>
        /// <param name="globalMemberType">The <see cref="Type"/>
        /// which contains the members with global visibility.</param>
        public GlobalMemberContainerAttribute(Type globalMemberType)
        {
            if (!globalMemberType.IsDefined(typeof(CompilerGeneratedAttribute), false))
                throw new ArgumentException("Invalid target container type, must be generated by a compiler.");
            if (!(globalMemberType.IsClass && ((globalMemberType.Attributes & (System.Reflection.TypeAttributes.Abstract | System.Reflection.TypeAttributes.Sealed)) != (System.Reflection.TypeAttributes)0)))
                throw new ArgumentException("Invalid target container type, must be a class.");
            this.GlobalMemberType = globalMemberType;
        }

        public Type GlobalMemberType { get; private set; }
    }
}
