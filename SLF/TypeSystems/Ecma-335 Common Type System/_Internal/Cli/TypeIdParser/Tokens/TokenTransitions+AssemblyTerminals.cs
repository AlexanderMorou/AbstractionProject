 /* -----------------------------------------------------------\
 |  This code was generated by Oilexer.                        |
 |  Version: 1.0.0.0                                           |
 |-------------------------------------------------------------|
 |  To ensure the code works properly,                         |
 |  please do not make any changes to the file.                |
 |-------------------------------------------------------------|
 |  The specific language is C# (Runtime version: v4.0.30319)  |
 |  Sub-tool Name: Oilexer.CSharpCodeTranslator                |
 |  Sub-tool Version: 1.0.0.0                                  |
 \----------------------------------------------------------- */
using AllenCopeland.Abstraction.Slf._Internal.Cli.TypeIdParser.Tokens;
using AllenCopeland.Abstraction.Slf._Internal.Cli.TypeIdParser;
using AllenCopeland.Abstraction.Slf._Internal.Cli.TypeIdParser.TypeIdParser;

namespace AllenCopeland.Abstraction.Slf._Internal.Cli.TypeIdParser.TypeIdParser
{
    // Module: RootModule
    partial class TokenTransitions
    {
        #region TokenTransitions nested types
        internal static class AssemblyTerminals
        {
            #region AssemblyTerminals data members
            private static TokenTransition? _Version;
            
            private static TokenTransition? _Culture;
            
            private static TokenTransition? _KeyToken;
            
            private static TokenTransition? _NullPublicKeyToken;
            #endregion // AssemblyTerminals data members
            #region AssemblyTerminals properties
            public static TokenTransition Version
            {
                get
                {
                    if (_Version == null)
                        _Version = AssemblyTerminalCases.Version;
                    return _Version.Value;
                }
            }
            
            public static TokenTransition Culture
            {
                get
                {
                    if (_Culture == null)
                        _Culture = AssemblyTerminalCases.Culture;
                    return _Culture.Value;
                }
            }
            
            public static TokenTransition KeyToken
            {
                get
                {
                    if (_KeyToken == null)
                        _KeyToken = AssemblyTerminalCases.KeyToken;
                    return _KeyToken.Value;
                }
            }
            
            public static TokenTransition NullPublicKeyToken
            {
                get
                {
                    if (_NullPublicKeyToken == null)
                        _NullPublicKeyToken = AssemblyTerminalCases.NullPublicKeyToken;
                    return _NullPublicKeyToken.Value;
                }
            }
            #endregion // AssemblyTerminals properties
        }
        #endregion // TokenTransitions nested types
    }
}
 /* ----------------------------------------------------------------------------\
 |  This file took 00:00:00.0004065 to generate.                                |
 |  Date generated: 4/8/2013 5:48:02 AM                                         |
 |  There were 3 types used by this file                                        |
 |  TokenTransition, TokenTransitions+AssemblyTerminals, AssemblyTerminalCases  |
 \---------------------------------------------------------------------------- */
