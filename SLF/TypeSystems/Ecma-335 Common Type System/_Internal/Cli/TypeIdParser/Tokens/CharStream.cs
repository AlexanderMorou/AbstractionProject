 /* -----------------------------------------------------------\
 |  This code was generated by Oilexer.                        |
 |  Version: 1.0.0.0                                           |
 |-------------------------------------------------------------|
 |  To ensure the code works properly,                         |
 |  please do not make any changes to the file.                |
 |-------------------------------------------------------------|
 |  The specific language is C# (Runtime version: v4.0.30319)  |
 |  Sub-tool Name: Oilexer.CSharpCodeTranslator                |
 |  Sub-tool Version: 1.0.0.0                                  |
 \----------------------------------------------------------- */
using System;

namespace AllenCopeland.Abstraction.Slf._Internal.Cli.TypeIdParser.Tokens
{
    // Module: RootModule
    internal class CharStream
    {
        #region CharStream data members
        internal char[] buffer;
        
        internal int actualSize = 0;
        #endregion // CharStream data members
        #region CharStream methods
        public void Purge()
        {
            this.actualSize = 0;
        }
        
        private void GrowBuffer(int totalSize)
        {
            if (this.buffer == null)
            {
                this.buffer = new char[totalSize];
                return;
            }
            if (this.buffer.Length >= totalSize)
                return;
            int pNew = (this.actualSize * 2);
            if (totalSize > pNew)
                pNew = totalSize;
            char[] newBuffer = new char[pNew];
            this.buffer.CopyTo(newBuffer, 0);
            this.buffer = newBuffer;
        }
        
        public void Push(string s)
        {
            if (this.buffer == null)
                this.GrowBuffer(s.Length);
            else if (this.buffer.Length < (this.actualSize + s.Length))
                this.GrowBuffer((this.actualSize + s.Length));
            for(int i = 0; (i < s.Length); i++)
            {
                this.buffer[this.actualSize] = s[i];
                this.actualSize++;
            }
        }
        
        public override sealed string ToString()
        {
            char[] result = new char[this.actualSize];
            for(int i = 0; (i < this.actualSize); i++)
            {
                result[i] = this.buffer[i];
            }
            return new string(result);
        }
        
        public void Push(char c)
        {
            if (this.buffer == null)
                this.GrowBuffer(2);
            else if (this.buffer.Length < (this.actualSize + 1))
                this.GrowBuffer((this.actualSize + 1));
            this.buffer[this.actualSize] = c;
            this.actualSize++;
        }
        #endregion // CharStream methods
    }
}
 /* ----------------------------------------------\
 |  This file took 00:00:00.0022070 to generate.  |
 |  Date generated: 4/8/2013 2:00:48 AM           |
 |  There were 4 types used by this file          |
 |  System.Char, System.Int32, System.Void,       |
 |  System.String                                 |
 |------------------------------------------------|
 |  There were 1 assemblies referenced:           |
 |  mscorlib                                      |
 \---------------------------------------------- */
