//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AllenCopeland.Abstraction.Slf.Languages.CSharp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AllenCopeland.Abstraction.Slf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal compiler error.
        /// </summary>
        internal static string CSharpErrors_CS0001 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out of memory.
        /// </summary>
        internal static string CSharpErrors_CS0003 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceWarning treated as error.
        /// </summary>
        internal static string CSharpErrors_CS0004 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiler option {0} must be followed by an argument.
        /// </summary>
        internal static string CSharpErrors_CS0005 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata file {0} could not be found.
        /// </summary>
        internal static string CSharpErrors_CS0006 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected common language runtime initialization error — {0}.
        /// </summary>
        internal static string CSharpErrors_CS0007 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error reading metadata from file &apos;file&apos; — {0}.
        /// </summary>
        internal static string CSharpErrors_CS0008 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata file {0} could not be opened — {1}.
        /// </summary>
        internal static string CSharpErrors_CS0009 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected fatal error -- {0}..
        /// </summary>
        internal static string CSharpErrors_CS0010 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base class or interface {0} in assembly {1} referenced by type {2} could not be resolved.
        /// </summary>
        internal static string CSharpErrors_CS0011 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} is defined in an assembly that is not referenced. You must add a reference to assembly {1}..
        /// </summary>
        internal static string CSharpErrors_CS0012 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error writing metadata to file {0} -- {1}.
        /// </summary>
        internal static string CSharpErrors_CS0013 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required file {0} could not be found.
        /// </summary>
        internal static string CSharpErrors_CS0014 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of type {0} is too long.
        /// </summary>
        internal static string CSharpErrors_CS0015 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write to output file {0} — {1}.
        /// </summary>
        internal static string CSharpErrors_CS0016 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program {0} has more than one entry point defined. Compile with /main to specify the type that contains the entry point..
        /// </summary>
        internal static string CSharpErrors_CS0017 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator {0} cannot be applied to operands of type {1} and {2}.
        /// </summary>
        internal static string CSharpErrors_CS0019 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Division by constant zero.
        /// </summary>
        internal static string CSharpErrors_CS0020 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot apply indexing with [] to an expression of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0021 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of indices inside [], expected {0}.
        /// </summary>
        internal static string CSharpErrors_CS0022 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator {0} cannot be applied to operand of type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0023 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard library file {0} could not be found.
        /// </summary>
        internal static string CSharpErrors_CS0025 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0025", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;this&apos; is not valid in a static property, static method, or static field initializer.
        /// </summary>
        internal static string CSharpErrors_CS0026 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0026", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;this&apos; is not available in the current context.
        /// </summary>
        internal static string CSharpErrors_CS0027 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0027", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type {0} to {1}.
        /// </summary>
        internal static string CSharpErrors_CS0029 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0029", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert type {0} to {1}.
        /// </summary>
        internal static string CSharpErrors_CS0030 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0030", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant value {0} cannot be converted to a {1}. (use &apos;unchecked&apos; syntax to override).
        /// </summary>
        internal static string CSharpErrors_CS0031 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0031", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator {0} is ambiguous on operands of type {1} and {2}.
        /// </summary>
        internal static string CSharpErrors_CS0034 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0034", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator {0} is ambiguous on an operand of type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0035 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0035", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An out parameter cannot have the &apos;[In]&apos; attribute.
        /// </summary>
        internal static string CSharpErrors_CS0036 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0036", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert null to {0} because it is a non-nullable value type.
        /// </summary>
        internal static string CSharpErrors_CS0037 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0037", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a nonstatic member of outer type {0} via nested type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0038 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0038", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert type {0} to {1} via a reference conversion, boxing conversion, unboxing conversion, wrapping conversion, or null type conversion.
        /// </summary>
        internal static string CSharpErrors_CS0039 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0039", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error creating debug information file — {0}.
        /// </summary>
        internal static string CSharpErrors_CS0040 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0040", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified name for {0} is too long for debug information. Compile without &apos;/debug&apos; option..
        /// </summary>
        internal static string CSharpErrors_CS0041 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0041", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error creating debug information file {0} — {1}.
        /// </summary>
        internal static string CSharpErrors_CS0042 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0042", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PDB file {0} has an incorrect or out-of-date format. Delete it and rebuild..
        /// </summary>
        internal static string CSharpErrors_CS0043 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0043", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: return type {0} is less accessible than method {1}.
        /// </summary>
        internal static string CSharpErrors_CS0050 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0050", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type {0} is less accessible than method {1}.
        /// </summary>
        internal static string CSharpErrors_CS0051 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0051", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: field type {0} is less accessible than field {1}.
        /// </summary>
        internal static string CSharpErrors_CS0052 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0052", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: property type {0} is less accessible than property {1}.
        /// </summary>
        internal static string CSharpErrors_CS0053 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0053", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: indexer return type {0} is less accessible than indexer {1}.
        /// </summary>
        internal static string CSharpErrors_CS0054 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0054", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type {0} is less accessible than indexer {1}.
        /// </summary>
        internal static string CSharpErrors_CS0055 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0055", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: return type {0} is less accessible than operator {1}.
        /// </summary>
        internal static string CSharpErrors_CS0056 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0056", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type {0} is less accessible than operator {1}.
        /// </summary>
        internal static string CSharpErrors_CS0057 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0057", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: return type {0} is less accessible than delegate {1}.
        /// </summary>
        internal static string CSharpErrors_CS0058 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0058", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type {0} is less accessible than delegate {1}.
        /// </summary>
        internal static string CSharpErrors_CS0059 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0059", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: base class {0} is less accessible than class {1}.
        /// </summary>
        internal static string CSharpErrors_CS0060 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0060", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: base interface {0} is less accessible than interface {1}.
        /// </summary>
        internal static string CSharpErrors_CS0061 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0061", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: event property must have both add and remove accessors.
        /// </summary>
        internal static string CSharpErrors_CS0065 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0065", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: event must be of a delegate type.
        /// </summary>
        internal static string CSharpErrors_CS0066 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0066", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: event in interface cannot have initializer.
        /// </summary>
        internal static string CSharpErrors_CS0068 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0068", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An event in an interface cannot have add or remove accessors.
        /// </summary>
        internal static string CSharpErrors_CS0069 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0069", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event {0} can only appear on the left hand side of += or -= (except when used from within the type {1}).
        /// </summary>
        internal static string CSharpErrors_CS0070 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0070", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An explicit interface implementation of an event must use event accessor syntax.
        /// </summary>
        internal static string CSharpErrors_CS0071 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0071", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot override; {1} is not an event.
        /// </summary>
        internal static string CSharpErrors_CS0072 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0072", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An add or remove accessor must have a body.
        /// </summary>
        internal static string CSharpErrors_CS0073 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0073", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: abstract event cannot have initializer.
        /// </summary>
        internal static string CSharpErrors_CS0074 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0074", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To cast a negative value, you must enclose the value in parentheses.
        /// </summary>
        internal static string CSharpErrors_CS0075 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0075", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enumerator name &apos;value__&apos; is reserved and cannot be used.
        /// </summary>
        internal static string CSharpErrors_CS0076 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0076", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The as operator must be used with a reference type or nullable type ({0} is a non-nullable value type)..
        /// </summary>
        internal static string CSharpErrors_CS0077 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0077", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event {0} can only appear on the left hand side of += or -=.
        /// </summary>
        internal static string CSharpErrors_CS0079 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0079", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraints are not allowed on non-generic declarations.
        /// </summary>
        internal static string CSharpErrors_CS0080 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0080", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter declaration must be an identifier not a type.
        /// </summary>
        internal static string CSharpErrors_CS0081 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0081", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} already reserves a member called {1} with the same parameter types.
        /// </summary>
        internal static string CSharpErrors_CS0082 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0082", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter name {0} is a duplicate.
        /// </summary>
        internal static string CSharpErrors_CS0100 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace {0} already contains a definition for {1}.
        /// </summary>
        internal static string CSharpErrors_CS0101 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0101", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} already contains a definition for {1}.
        /// </summary>
        internal static string CSharpErrors_CS0102 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0102", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name {0} does not exist in the current context.
        /// </summary>
        internal static string CSharpErrors_CS0103 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0103", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an ambiguous reference between {1} and {2}.
        /// </summary>
        internal static string CSharpErrors_CS0104 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0104", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifier {0} is not valid for this item.
        /// </summary>
        internal static string CSharpErrors_CS0106 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0106", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one protection modifier.
        /// </summary>
        internal static string CSharpErrors_CS0107 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0107", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The evaluation of the constant value for {0} involves a circular definition.
        /// </summary>
        internal static string CSharpErrors_CS0110 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0110", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} already defines a member called {1} with the same parameter types.
        /// </summary>
        internal static string CSharpErrors_CS0111 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0111", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static member {0} cannot be marked as override, virtual or abstract.
        /// </summary>
        internal static string CSharpErrors_CS0112 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0112", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A member {0} marked as override cannot be marked as new or virtual.
        /// </summary>
        internal static string CSharpErrors_CS0113 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0113", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : no suitable method found to override.
        /// </summary>
        internal static string CSharpErrors_CS0115 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0115", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A namespace does not directly contain members such as fields or methods.
        /// </summary>
        internal static string CSharpErrors_CS0116 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0116", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not contain a definition for &apos;identifier&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0117 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0117", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a {1} but is used like a {2}.
        /// </summary>
        internal static string CSharpErrors_CS0118 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0118", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a {1}, which is not valid in the given context..
        /// </summary>
        internal static string CSharpErrors_CS0119 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0119", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object reference is required for the nonstatic field, method, or property {0}.
        /// </summary>
        internal static string CSharpErrors_CS0120 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0120", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call is ambiguous between the following methods or properties: {0} and {1}.
        /// </summary>
        internal static string CSharpErrors_CS0121 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0121", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is inaccessible due to its protection level.
        /// </summary>
        internal static string CSharpErrors_CS0122 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0122", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for {0} matches delegate {1}.
        /// </summary>
        internal static string CSharpErrors_CS0123 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0123", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object of a type convertible to {0} is required.
        /// </summary>
        internal static string CSharpErrors_CS0126 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0126", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since {0} returns void, a return keyword must not be followed by an object expression.
        /// </summary>
        internal static string CSharpErrors_CS0127 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0127", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local variable named {0} is already defined in this scope.
        /// </summary>
        internal static string CSharpErrors_CS0128 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The left-hand side of an assignment must be a variable, property or indexer.
        /// </summary>
        internal static string CSharpErrors_CS0131 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0131", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : a static constructor must be parameterless.
        /// </summary>
        internal static string CSharpErrors_CS0132 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0132", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression being assigned to {0} must be constant.
        /// </summary>
        internal static string CSharpErrors_CS0133 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0133", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is of type {1}. A const field of a reference type other than string can only be initialized with null..
        /// </summary>
        internal static string CSharpErrors_CS0134 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0134", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} conflicts with the declaration {1}.
        /// </summary>
        internal static string CSharpErrors_CS0135 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0135", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local variable named {0} cannot be declared in this scope because it would give a different meaning to {0}, which is already used in a &apos;parent or current/child&apos; scope to denote something else.
        /// </summary>
        internal static string CSharpErrors_CS0136 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0136", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A using namespace directive can only be applied to namespaces; {0} is a type not a namespace.
        /// </summary>
        internal static string CSharpErrors_CS0138 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0138", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No enclosing loop out of which to break or continue.
        /// </summary>
        internal static string CSharpErrors_CS0139 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0139", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label {0} is a duplicate.
        /// </summary>
        internal static string CSharpErrors_CS0140 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0140", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} has no constructors defined.
        /// </summary>
        internal static string CSharpErrors_CS0143 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0143", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the abstract class or interface {0}.
        /// </summary>
        internal static string CSharpErrors_CS0144 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0144", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A const field requires a value to be provided.
        /// </summary>
        internal static string CSharpErrors_CS0145 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0145", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular base class dependency involving {0} and {1}.
        /// </summary>
        internal static string CSharpErrors_CS0146 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0146", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delegate {0} does not have a valid constructor.
        /// </summary>
        internal static string CSharpErrors_CS0148 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0148", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method name expected.
        /// </summary>
        internal static string CSharpErrors_CS0149 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0149", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constant value is expected.
        /// </summary>
        internal static string CSharpErrors_CS0150 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0150", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of an integral type expected.
        /// </summary>
        internal static string CSharpErrors_CS0151 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0151", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label {0} already occurs in this switch statement.
        /// </summary>
        internal static string CSharpErrors_CS0152 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0152", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A goto case is only valid inside a switch statement.
        /// </summary>
        internal static string CSharpErrors_CS0153 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0153", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;property&apos; cannot be used in this context because it lacks the get accessor.
        /// </summary>
        internal static string CSharpErrors_CS0154 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0154", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type caught or thrown must be derived from System.Exception.
        /// </summary>
        internal static string CSharpErrors_CS0155 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0155", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A throw statement with no arguments is not allowed in a finally clause that is nested inside the nearest enclosing catch clause.
        /// </summary>
        internal static string CSharpErrors_CS0156 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0156", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot leave the body of a finally clause.
        /// </summary>
        internal static string CSharpErrors_CS0157 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0157", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label {0} shadows another label by the same name in a contained scope.
        /// </summary>
        internal static string CSharpErrors_CS0158 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0158", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such label {0} within the scope of the goto statement.
        /// </summary>
        internal static string CSharpErrors_CS0159 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0159", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous catch clause already catches all exceptions of this or of a super type ({0}).
        /// </summary>
        internal static string CSharpErrors_CS0160 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0160", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: not all code paths return a value.
        /// </summary>
        internal static string CSharpErrors_CS0161 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0161", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot fall through from one case label ({0}) to another.
        /// </summary>
        internal static string CSharpErrors_CS0163 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0163", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of unassigned local variable {0}.
        /// </summary>
        internal static string CSharpErrors_CS0165 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0165", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delegate {0} is missing the Invoke method.
        /// </summary>
        internal static string CSharpErrors_CS0167 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0167", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of possibly unassigned field {0}.
        /// </summary>
        internal static string CSharpErrors_CS0170 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0170", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing field for automatically implemented property {0} must be fully assigned before control is returned to the caller. Consider calling the default constructor from a constructor initializer..
        /// </summary>
        internal static string CSharpErrors_CS0171 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0171", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of conditional expression cannot be determined because {0} and {1} implicitly convert to one another.
        /// </summary>
        internal static string CSharpErrors_CS0172 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0172", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of conditional expression cannot be determined because there is no implicit conversion between {0} and {1}.
        /// </summary>
        internal static string CSharpErrors_CS0173 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0173", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base class is required for a &apos;base&apos; reference.
        /// </summary>
        internal static string CSharpErrors_CS0174 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0174", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of keyword &apos;base&apos; is not valid in this context.
        /// </summary>
        internal static string CSharpErrors_CS0175 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0175", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static member {0} cannot be accessed with an instance reference; qualify it with a type name instead.
        /// </summary>
        internal static string CSharpErrors_CS0176 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0176", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The out parameter {0} must be assigned to before control leaves the current method.
        /// </summary>
        internal static string CSharpErrors_CS0177 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0177", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid rank specifier: expected &apos;,&apos; or &apos;]&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0178 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0178", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be extern and declare a body.
        /// </summary>
        internal static string CSharpErrors_CS0179 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0179", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be both extern and abstract.
        /// </summary>
        internal static string CSharpErrors_CS0180 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0180", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type.
        /// </summary>
        internal static string CSharpErrors_CS0182 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0182", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a reference type as required by the lock statement.
        /// </summary>
        internal static string CSharpErrors_CS0185 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0185", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of null is not valid in this context .
        /// </summary>
        internal static string CSharpErrors_CS0186 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0186", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;this&apos; object cannot be used before all of its fields are assigned to.
        /// </summary>
        internal static string CSharpErrors_CS0188 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0188", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property or indexer {0} cannot be assigned to -- it is read only.
        /// </summary>
        internal static string CSharpErrors_CS0191 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0191", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field {0} cannot be passed ref or out (except in a static constructor).
        /// </summary>
        internal static string CSharpErrors_CS0192 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0192", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The * or -&gt; operator must be applied to a pointer.
        /// </summary>
        internal static string CSharpErrors_CS0193 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0193", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A pointer must be indexed by only one value.
        /// </summary>
        internal static string CSharpErrors_CS0196 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0196", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field {0} cannot be assigned to (except in a static constructor or a variable initializer).
        /// </summary>
        internal static string CSharpErrors_CS0198 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0198", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field {0} cannot be passed ref or out (except in a static constructor).
        /// </summary>
        internal static string CSharpErrors_CS0199 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0199", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property or indexer {0} cannot be assigned to — it is read only.
        /// </summary>
        internal static string CSharpErrors_CS0200 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0200", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only assignment, call, increment, decrement, and new object expressions can be used as a statement.
        /// </summary>
        internal static string CSharpErrors_CS0201 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0201", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach requires that the return type {0} of &apos;{1}.GetEnumerator()&apos; must have a suitable public MoveNext method and public Current property.
        /// </summary>
        internal static string CSharpErrors_CS0202 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0202", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only 65534 locals are allowed.
        /// </summary>
        internal static string CSharpErrors_CS0204 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0204", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot call an abstract base member: {0}.
        /// </summary>
        internal static string CSharpErrors_CS0205 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0205", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A property or indexer may not be passed as an out or ref parameter.
        /// </summary>
        internal static string CSharpErrors_CS0206 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0206", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of, get the size of, or declare a pointer to a managed type ({0}).
        /// </summary>
        internal static string CSharpErrors_CS0208 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0208", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of local declared in a fixed statement must be a pointer type.
        /// </summary>
        internal static string CSharpErrors_CS0209 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0209", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide an initializer in a fixed or using statement declaration.
        /// </summary>
        internal static string CSharpErrors_CS0210 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0210", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of the given expression.
        /// </summary>
        internal static string CSharpErrors_CS0211 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0211", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only take the address of an unfixed expression inside of a fixed statement initializer.
        /// </summary>
        internal static string CSharpErrors_CS0212 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0212", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use the fixed statement to take the address of an already fixed expression.
        /// </summary>
        internal static string CSharpErrors_CS0213 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0213", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointers and fixed size buffers may only be used in an unsafe context.
        /// </summary>
        internal static string CSharpErrors_CS0214 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0214", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type of operator True or False must be bool.
        /// </summary>
        internal static string CSharpErrors_CS0215 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0215", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operator {0} requires a matching operator {1} to also be defined.
        /// </summary>
        internal static string CSharpErrors_CS0216 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0216", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to be applicable as a short circuit operator a user-defined logical operator ({0}) must have the same return type as the type of its 2 parameters..
        /// </summary>
        internal static string CSharpErrors_CS0217 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0217", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type ({0}) must contain declarations of operator true and operator false.
        /// </summary>
        internal static string CSharpErrors_CS0218 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0218", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation overflows at compile time in checked mode.
        /// </summary>
        internal static string CSharpErrors_CS0220 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0220", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant value {0} cannot be converted to a {1} (use &apos;unchecked&apos; syntax to override).
        /// </summary>
        internal static string CSharpErrors_CS0221 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0221", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The params parameter must be a single dimensional array.
        /// </summary>
        internal static string CSharpErrors_CS0225 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0225", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An __arglist expression may only appear inside of a call or new expression..
        /// </summary>
        internal static string CSharpErrors_CS0226 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0226", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsafe code may only appear if compiling with /unsafe.
        /// </summary>
        internal static string CSharpErrors_CS0227 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0227", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not contain a definition for {1}, or it is not accessible.
        /// </summary>
        internal static string CSharpErrors_CS0228 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0228", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguity between {0} and {1}.
        /// </summary>
        internal static string CSharpErrors_CS0229 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0229", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type and identifier are both required in a foreach statement.
        /// </summary>
        internal static string CSharpErrors_CS0230 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0230", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A params parameter must be the last parameter in a formal parameter list..
        /// </summary>
        internal static string CSharpErrors_CS0231 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0231", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not have a predefined size, therefore sizeof can only be used in an unsafe context (consider using System.Runtime.InteropServices.Marshal.SizeOf).
        /// </summary>
        internal static string CSharpErrors_CS0233 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0233", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or namespace name {0} does not exist in the namespace {1} (are you missing an assembly reference?).
        /// </summary>
        internal static string CSharpErrors_CS0234 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0234", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field initializer cannot reference the nonstatic field, method, or property {0}.
        /// </summary>
        internal static string CSharpErrors_CS0236 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0236", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be sealed because it is not an override.
        /// </summary>
        internal static string CSharpErrors_CS0238 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0238", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot override inherited member {1} because it is sealed.
        /// </summary>
        internal static string CSharpErrors_CS0239 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0239", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default parameter specifiers are not permitted.
        /// </summary>
        internal static string CSharpErrors_CS0241 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0241", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation in question is undefined on void pointers.
        /// </summary>
        internal static string CSharpErrors_CS0242 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0242", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on &apos;method&apos; because it is an override method.
        /// </summary>
        internal static string CSharpErrors_CS0243 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0243", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neither &apos;is&apos; nor &apos;as&apos; is valid on pointer types.
        /// </summary>
        internal static string CSharpErrors_CS0244 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0244", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destructors and object.Finalize cannot be called directly. Consider calling IDisposable.Dispose if available..
        /// </summary>
        internal static string CSharpErrors_CS0245 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0245", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or namespace name {0} could not be found (are you missing a using directive or an assembly reference?).
        /// </summary>
        internal static string CSharpErrors_CS0246 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0246", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use a negative size with stackalloc.
        /// </summary>
        internal static string CSharpErrors_CS0247 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0247", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an array with a negative size.
        /// </summary>
        internal static string CSharpErrors_CS0248 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0248", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not override object.Finalize. Instead, provide a destructor..
        /// </summary>
        internal static string CSharpErrors_CS0249 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0249", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not directly call your base class Finalize method. It is called automatically from your destructor..
        /// </summary>
        internal static string CSharpErrors_CS0250 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0250", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The right hand side of a fixed statement assignment may not be a cast expression.
        /// </summary>
        internal static string CSharpErrors_CS0254 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0254", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stackalloc may not be used in a catch or finally block.
        /// </summary>
        internal static string CSharpErrors_CS0255 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0255", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing partial modifier on declaration of type {0}; another partial declaration of this type exists.
        /// </summary>
        internal static string CSharpErrors_CS0260 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0260", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of {0} must be all classes, all structs, or all interfaces.
        /// </summary>
        internal static string CSharpErrors_CS0261 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0261", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of {0} have conflicting accessibility modifiers.
        /// </summary>
        internal static string CSharpErrors_CS0262 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0262", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of {0} must not specify different base classes.
        /// </summary>
        internal static string CSharpErrors_CS0263 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0263", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of {0} must have the same type parameter names in the same order.
        /// </summary>
        internal static string CSharpErrors_CS0264 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0264", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of {0} have inconsistent constraints for type parameter {1}.
        /// </summary>
        internal static string CSharpErrors_CS0265 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0265", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type {0} to {1}. An explicit conversion exists (are you missing a cast?).
        /// </summary>
        internal static string CSharpErrors_CS0266 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0266", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The partial modifier can only appear immediately before &apos;class&apos;, &apos;struct&apos;, or &apos;interface&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0267 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0267", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imported type {0} is invalid. It contains a circular base class dependency..
        /// </summary>
        internal static string CSharpErrors_CS0268 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0268", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of unassigned out parameter {0}.
        /// </summary>
        internal static string CSharpErrors_CS0269 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0269", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array size cannot be specified in a variable declaration (try initializing with a &apos;new&apos; expression).
        /// </summary>
        internal static string CSharpErrors_CS0270 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0270", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer {0} cannot be used in this context because the get accessor is inaccessible.
        /// </summary>
        internal static string CSharpErrors_CS0271 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0271", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer {0} cannot be used in this context because the set accessor is inaccessible.
        /// </summary>
        internal static string CSharpErrors_CS0272 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0272", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The accessibility modifier of the {0} accessor must be more restrictive than the property or indexer {1}.
        /// </summary>
        internal static string CSharpErrors_CS0273 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0273", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify accessibility modifiers for both accessors of the property or indexer {0}.
        /// </summary>
        internal static string CSharpErrors_CS0274 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0274", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: accessibility modifiers may not be used on accessors in an interface.
        /// </summary>
        internal static string CSharpErrors_CS0275 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0275", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: accessibility modifiers on accessors may only be used if the property or indexer has both a get and a set accessor.
        /// </summary>
        internal static string CSharpErrors_CS0276 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0276", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement interface member {1}. {2} is not public.
        /// </summary>
        internal static string CSharpErrors_CS0277 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0277", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend access was granted to {0}, but the output assembly is named {1}. Try adding a reference to {0} or changing the output assembly name to match..
        /// </summary>
        internal static string CSharpErrors_CS0281 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0281", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be declared const.
        /// </summary>
        internal static string CSharpErrors_CS0283 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0283", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the variable type {0} because it does not have the new() constraint.
        /// </summary>
        internal static string CSharpErrors_CS0304 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0304", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the generic type {0} requires {1} type arguments.
        /// </summary>
        internal static string CSharpErrors_CS0305 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0305", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} may not be used as a type argument.
        /// </summary>
        internal static string CSharpErrors_CS0306 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0306", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} {1} is not a generic method. If you intended an expression list, use parentheses around the &lt; expression..
        /// </summary>
        internal static string CSharpErrors_CS0307 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0307", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The non-generic type-or-method {0} cannot be used with type arguments..
        /// </summary>
        internal static string CSharpErrors_CS0308 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0308", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must be a non-abstract type with a public parameterless constructor in order to use it as parameter {1} in the generic type or method {2}.
        /// </summary>
        internal static string CSharpErrors_CS0310 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0310", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be used as type parameter {2} in the generic type or method {3}. There is no implicit reference conversion from {0} to {1}..
        /// </summary>
        internal static string CSharpErrors_CS0311 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0311", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be used as type parameter {1} in the generic type or method {2}. The nullable type {0} does not satisfy the constraint of {3}..
        /// </summary>
        internal static string CSharpErrors_CS0312 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0312", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be used as type parameter {1} in the generic type or method {2}. The nullable type {0} does not satisfy the constraint of {2}. Nullable types cannot satisfy any interface constraints..
        /// </summary>
        internal static string CSharpErrors_CS0313 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0313", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be used as type parameter {1} in the generic type or method {2}. There is no boxing conversion or type parameter conversion from {3} to {4}..
        /// </summary>
        internal static string CSharpErrors_CS0314 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0314", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be used as type parameter &apos;{1}&apos; in the generic type or method &apos;{2}&apos;. There is no boxing conversion from &apos;{3}&apos; to &apos;{4}&apos;..
        /// </summary>
        internal static string CSharpErrors_CS0315 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0315", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter name {0} conflicts with an automatically-generated parameter name..
        /// </summary>
        internal static string CSharpErrors_CS0316 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0316", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or namespace name {0} could not be found in the global namespace (are you missing an assembly reference?).
        /// </summary>
        internal static string CSharpErrors_CS0400 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0400", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new() constraint must be the last constraint specified.
        /// </summary>
        internal static string CSharpErrors_CS0401 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0401", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert null to type parameter {0} because it could be a non-nullable value type. Consider using default({0}) instead..
        /// </summary>
        internal static string CSharpErrors_CS0403 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0403", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;&lt;&apos; unexpected : attributes cannot be generic.
        /// </summary>
        internal static string CSharpErrors_CS0404 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0404", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate constraint {0} for type parameter {1}.
        /// </summary>
        internal static string CSharpErrors_CS0405 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0405", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class type constraint {0} must come before any other constraints.
        /// </summary>
        internal static string CSharpErrors_CS0406 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0406", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has the wrong return type.
        /// </summary>
        internal static string CSharpErrors_CS0407 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0407", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constraint clause has already been specified for type parameter {0}. All of the constraints for a type parameter must be specified in a single where clause..
        /// </summary>
        internal static string CSharpErrors_CS0409 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0409", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for {0} has the correct parameter and return types.
        /// </summary>
        internal static string CSharpErrors_CS0410 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0410", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type arguments for method {0} cannot be inferred from the usage. Try specifying the type arguments explicitly..
        /// </summary>
        internal static string CSharpErrors_CS0411 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0411", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: a parameter or local variable cannot have the same name as a method type parameter.
        /// </summary>
        internal static string CSharpErrors_CS0412 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0412", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type parameter {0} cannot be used with the &apos;as&apos; operator because it does not have a class type constraint nor a constraint that is a class.
        /// </summary>
        internal static string CSharpErrors_CS0413 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0413", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} attribute is valid only on an indexer that is not an explicit interface member declaration.
        /// </summary>
        internal static string CSharpErrors_CS0415 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0415", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: an attribute argument cannot use type parameters.
        /// </summary>
        internal static string CSharpErrors_CS0416 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0416", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot provide arguments when creating an instance of a variable type.
        /// </summary>
        internal static string CSharpErrors_CS0417 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0417", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: an abstract class cannot be sealed or static.
        /// </summary>
        internal static string CSharpErrors_CS0418 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0418", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since {0} has the ComImport attribute, {1} must be extern or abstract.
        /// </summary>
        internal static string CSharpErrors_CS0423 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0423", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: a class with the ComImport attribute cannot specify a base class.
        /// </summary>
        internal static string CSharpErrors_CS0424 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0424", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constraints for type parameter {0} of method {1} must match the constraints for type parameter {2} of interface method {3}. Consider using an explicit interface implementation instead..
        /// </summary>
        internal static string CSharpErrors_CS0425 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0425", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name {0} does not exist in the type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0426 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0426", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert method group {0} to non-delegate type {1}. Did you intend to invoke the method?.
        /// </summary>
        internal static string CSharpErrors_CS0428 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0428", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extern alias {0} was not specified in a /reference option.
        /// </summary>
        internal static string CSharpErrors_CS0430 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0430", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use alias {0} with &apos;::&apos; since the alias references a type. Use &apos;.&apos; instead..
        /// </summary>
        internal static string CSharpErrors_CS0431 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0431", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias {0} not found.
        /// </summary>
        internal static string CSharpErrors_CS0432 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0432", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} exists in both {1} and {2}.
        /// </summary>
        internal static string CSharpErrors_CS0433 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0433", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace {0} in {1} conflicts with the type {2} in {3}.
        /// </summary>
        internal static string CSharpErrors_CS0434 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0434", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} in {1} conflicts with the namespace {2} in {3}..
        /// </summary>
        internal static string CSharpErrors_CS0438 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0438", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extern alias declaration must precede all other elements defined in the namespace.
        /// </summary>
        internal static string CSharpErrors_CS0439 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0439", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: a class cannot be both static and sealed.
        /// </summary>
        internal static string CSharpErrors_CS0441 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0441", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: abstract properties cannot have private accessors.
        /// </summary>
        internal static string CSharpErrors_CS0442 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0442", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error, value expected.
        /// </summary>
        internal static string CSharpErrors_CS0443 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0443", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify the result of an unboxing conversion.
        /// </summary>
        internal static string CSharpErrors_CS0445 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0445", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foreach cannot operate on a {0}. Did you intend to invoke the {0}?.
        /// </summary>
        internal static string CSharpErrors_CS0446 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0446", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes cannot be used on type arguments, only on type parameters.
        /// </summary>
        internal static string CSharpErrors_CS0447 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0447", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type for ++ or -- operator must be the containing type or derived from the containing type.
        /// </summary>
        internal static string CSharpErrors_CS0448 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0448", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;class&apos; or &apos;struct&apos; constraint must come before any other constraints.
        /// </summary>
        internal static string CSharpErrors_CS0449 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0449", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot specify both a constraint class and the &apos;class&apos; or &apos;struct&apos; constraint.
        /// </summary>
        internal static string CSharpErrors_CS0450 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0450", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;new()&apos; constraint cannot be used with the &apos;struct&apos; constraint.
        /// </summary>
        internal static string CSharpErrors_CS0451 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0451", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must be a reference type in order to use it as parameter {1} in the generic type or method {2}..
        /// </summary>
        internal static string CSharpErrors_CS0452 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0452", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} must be a non-nullable value type in order to use it as parameter {1} in the generic type or method {2}.
        /// </summary>
        internal static string CSharpErrors_CS0453 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0453", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular constraint dependency involving {0} and {1}.
        /// </summary>
        internal static string CSharpErrors_CS0454 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0454", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter {0} inherits conflicting constraints {1} and {2}.
        /// </summary>
        internal static string CSharpErrors_CS0455 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0455", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter {0} has the &apos;struct&apos; constraint so {0} cannot be used as a constraint for {1}.
        /// </summary>
        internal static string CSharpErrors_CS0456 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0456", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous user defined conversions {0} and {1} when converting from {2} to {3}.
        /// </summary>
        internal static string CSharpErrors_CS0457 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0457", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of a read-only local variable.
        /// </summary>
        internal static string CSharpErrors_CS0459 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0459", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraints for override and explicit interface implementation methods are inherited from the base method, so they cannot be specified directly.
        /// </summary>
        internal static string CSharpErrors_CS0460 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0460", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inherited members {0} and {1} have the same signature in type {1}, so they cannot be overridden.
        /// </summary>
        internal static string CSharpErrors_CS0462 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0462", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluation of the decimal constant expression failed with error: {0}.
        /// </summary>
        internal static string CSharpErrors_CS0463 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0463", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should not have a params parameter since {1} does not.
        /// </summary>
        internal static string CSharpErrors_CS0466 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0466", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguity between type {0} and type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0468 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0468", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} cannot implement interface accessor {1} for type {2}. Use an explicit interface implementation..
        /// </summary>
        internal static string CSharpErrors_CS0470 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0470", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method [0} is not a generic method. If you intended an expression list, use parentheses around the &amp;lt; expression..
        /// </summary>
        internal static string CSharpErrors_CS0471 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0471", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit interface implementation {0} matches more than one interface member. Which interface member is actually chosen is implementation-dependent. Consider using a non-explicit implementation instead..
        /// </summary>
        internal static string CSharpErrors_CS0473 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0473", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot declare a body because it is marked abstract.
        /// </summary>
        internal static string CSharpErrors_CS0500 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0500", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must declare a body because it is not marked abstract, extern, or partial.
        /// </summary>
        internal static string CSharpErrors_CS0501 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0501", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be both abstract and sealed.
        /// </summary>
        internal static string CSharpErrors_CS0502 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0502", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The abstract method {0} cannot be marked virtual.
        /// </summary>
        internal static string CSharpErrors_CS0503 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0503", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constant {0} cannot be marked static.
        /// </summary>
        internal static string CSharpErrors_CS0504 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0504", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot override because {1} is not a function.
        /// </summary>
        internal static string CSharpErrors_CS0505 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0505", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot override inherited member {1} because it is not marked &apos;virtual&apos;, &apos;abstract&apos;, or &apos;override&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0506 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0506", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot change access modifiers when overriding {1} inherited member {2}.
        /// </summary>
        internal static string CSharpErrors_CS0507 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0507", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: return type must be {1} to match overridden member {2}.
        /// </summary>
        internal static string CSharpErrors_CS0508 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0508", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot derive from sealed type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0509 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0509", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is abstract but it is contained in nonabstract class {1}.
        /// </summary>
        internal static string CSharpErrors_CS0513 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0513", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : static constructor cannot have an explicit &apos;this&apos; or &apos;base&apos; constructor call.
        /// </summary>
        internal static string CSharpErrors_CS0514 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0514", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : access modifiers are not allowed on static constructors.
        /// </summary>
        internal static string CSharpErrors_CS0515 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0515", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor {0} can not call itself.
        /// </summary>
        internal static string CSharpErrors_CS0516 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0516", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has no base class and cannot call a base constructor.
        /// </summary>
        internal static string CSharpErrors_CS0517 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0517", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type {0} is not defined or imported.
        /// </summary>
        internal static string CSharpErrors_CS0518 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0518", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type {0} is declared incorrectly.
        /// </summary>
        internal static string CSharpErrors_CS0520 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0520", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : structs cannot call base class constructors.
        /// </summary>
        internal static string CSharpErrors_CS0522 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0522", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Struct member {0} of type {1} causes a cycle in the struct layout.
        /// </summary>
        internal static string CSharpErrors_CS0523 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0523", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : interfaces cannot declare types.
        /// </summary>
        internal static string CSharpErrors_CS0524 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0524", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot contain fields.
        /// </summary>
        internal static string CSharpErrors_CS0525 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0525", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot contain constructors.
        /// </summary>
        internal static string CSharpErrors_CS0526 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0526", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} in interface list is not an interface.
        /// </summary>
        internal static string CSharpErrors_CS0527 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0527", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is already listed in interface list.
        /// </summary>
        internal static string CSharpErrors_CS0528 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0528", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inherited interface {0} causes a cycle in the interface hierarchy of {1}.
        /// </summary>
        internal static string CSharpErrors_CS0529 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0529", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : interface members cannot have a definition.
        /// </summary>
        internal static string CSharpErrors_CS0531 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0531", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hides inherited abstract member {1}.
        /// </summary>
        internal static string CSharpErrors_CS0533 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0533", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement inherited abstract member {1}.
        /// </summary>
        internal static string CSharpErrors_CS0534 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0534", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement interface member {1}.
        /// </summary>
        internal static string CSharpErrors_CS0535 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0535", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class System.Object cannot have a base class or implement an interface.
        /// </summary>
        internal static string CSharpErrors_CS0537 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0537", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} in explicit interface declaration is not an interface.
        /// </summary>
        internal static string CSharpErrors_CS0538 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0538", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} in explicit interface declaration is not a member of interface.
        /// </summary>
        internal static string CSharpErrors_CS0539 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0539", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : containing type does not implement interface {1}.
        /// </summary>
        internal static string CSharpErrors_CS0540 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0540", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : explicit interface declaration can only be declared in a class or struct.
        /// </summary>
        internal static string CSharpErrors_CS0541 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0541", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : member names cannot be the same as their enclosing type.
        /// </summary>
        internal static string CSharpErrors_CS0542 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0542", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : the enumerator value is too large to fit in its type.
        /// </summary>
        internal static string CSharpErrors_CS0543 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0543", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot override because {1} is not a property.
        /// </summary>
        internal static string CSharpErrors_CS0544 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0544", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot override because {1} does not have an overridable get accessor.
        /// </summary>
        internal static string CSharpErrors_CS0545 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0545", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot override because {1} does not have an overridable set accessor.
        /// </summary>
        internal static string CSharpErrors_CS0546 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0546", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : property or indexer cannot have void type.
        /// </summary>
        internal static string CSharpErrors_CS0547 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0547", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : property or indexer must have at least one accessor.
        /// </summary>
        internal static string CSharpErrors_CS0548 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0548", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a new virtual member in sealed class {1}.
        /// </summary>
        internal static string CSharpErrors_CS0549 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0549", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} adds an accessor not found in interface member {1}.
        /// </summary>
        internal static string CSharpErrors_CS0550 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0550", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit interface implementation {0} is missing accessor {1}.
        /// </summary>
        internal static string CSharpErrors_CS0551 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0551", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : user defined conversion to/from interface.
        /// </summary>
        internal static string CSharpErrors_CS0552 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0552", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : user defined conversion to/from base class.
        /// </summary>
        internal static string CSharpErrors_CS0553 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0553", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : user defined conversion to/from derived class.
        /// </summary>
        internal static string CSharpErrors_CS0554 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0554", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operator cannot take an object of the enclosing type and convert to an object of the enclosing type.
        /// </summary>
        internal static string CSharpErrors_CS0555 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0555", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined conversion must convert to or from the enclosing type.
        /// </summary>
        internal static string CSharpErrors_CS0556 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0556", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate user-defined conversion in type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0557 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0557", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operator {0} must be declared static and public.
        /// </summary>
        internal static string CSharpErrors_CS0558 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0558", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter type for ++ or -- operator must be the containing type.
        /// </summary>
        internal static string CSharpErrors_CS0559 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0559", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter of a unary operator must be the containing type.
        /// </summary>
        internal static string CSharpErrors_CS0562 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0562", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the parameters of a binary operator must be the containing type.
        /// </summary>
        internal static string CSharpErrors_CS0563 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0563", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first operand of an overloaded shift operator must have the same type as the containing type, and the type of the second operand must be int.
        /// </summary>
        internal static string CSharpErrors_CS0564 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0564", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot contain operators.
        /// </summary>
        internal static string CSharpErrors_CS0567 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0567", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structs cannot contain explicit parameterless constructors.
        /// </summary>
        internal static string CSharpErrors_CS0568 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0568", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} : cannot override {0} because it is not supported by the language.
        /// </summary>
        internal static string CSharpErrors_CS0569 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0569", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event {0} is not supported by the language; try directly calling accessor method {1}!.
        /// </summary>
        internal static string CSharpErrors_CS0570 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0570", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot explicitly call operator or accessor.
        /// </summary>
        internal static string CSharpErrors_CS0571 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0571", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot reference a type through an expression; try {1} instead.
        /// </summary>
        internal static string CSharpErrors_CS0572 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0572", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : cannot have instance field initializers in structs.
        /// </summary>
        internal static string CSharpErrors_CS0573 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0573", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of destructor must match name of class.
        /// </summary>
        internal static string CSharpErrors_CS0574 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0574", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only class types can contain destructors.
        /// </summary>
        internal static string CSharpErrors_CS0575 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0575", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace {0} contains a definition conflicting with alias {1}.
        /// </summary>
        internal static string CSharpErrors_CS0576 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0576", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on {0} because it is a constructor, destructor, operator, or explicit interface implementation.
        /// </summary>
        internal static string CSharpErrors_CS0577 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0577", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on {0} because its return type is not void.
        /// </summary>
        internal static string CSharpErrors_CS0578 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0578", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate {0} attribute.
        /// </summary>
        internal static string CSharpErrors_CS0579 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0579", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional not valid on interface members.
        /// </summary>
        internal static string CSharpErrors_CS0582 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0582", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError. An internal error has occurred in the compiler. To work around this problem, try simplifying or changing the program near the locations listed below. Locations at the top of the list are closer to the point at which the internal error occurred. Errors such as this can be reported to Microsoft by using the /errorreport option..
        /// </summary>
        internal static string CSharpErrors_CS0583 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0583", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError: stage {0} symbol {1}.
        /// </summary>
        internal static string CSharpErrors_CS0584 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0584", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError: stage {0}.
        /// </summary>
        internal static string CSharpErrors_CS0585 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0585", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError: stage {0}.
        /// </summary>
        internal static string CSharpErrors_CS0586 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0586", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError: stage {0}.
        /// </summary>
        internal static string CSharpErrors_CS0587 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0587", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError: stage &apos;LEX&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0588 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0588", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Compiler SourceError: stage &apos;PARSE&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0589 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0589", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operators cannot return void.
        /// </summary>
        internal static string CSharpErrors_CS0590 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0590", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for argument to {0} attribute.
        /// </summary>
        internal static string CSharpErrors_CS0591 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0591", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute {0} is not valid on this declaration type. It is valid on {1} declarations only..
        /// </summary>
        internal static string CSharpErrors_CS0592 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0592", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating-point constant is outside the range of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0594 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0594", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Guid attribute must be specified with the ComImport attribute.
        /// </summary>
        internal static string CSharpErrors_CS0596 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0596", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for named attribute argument {0}.
        /// </summary>
        internal static string CSharpErrors_CS0599 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0599", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DllImport attribute must be specified on a method marked &apos;static&apos; and &apos;extern&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0601 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0601", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the IndexerName attribute on an indexer marked override.
        /// </summary>
        internal static string CSharpErrors_CS0609 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0609", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field or property cannot be of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0610 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0610", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array elements cannot be of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0611 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0611", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not an attribute class.
        /// </summary>
        internal static string CSharpErrors_CS0616 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0616", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid named attribute argument because it is not a valid attribute parameter type.
        /// </summary>
        internal static string CSharpErrors_CS0617 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0617", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is obsolete: {1}.
        /// </summary>
        internal static string CSharpErrors_CS0619 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0619", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexers cannot have void type.
        /// </summary>
        internal static string CSharpErrors_CS0620 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0620", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : virtual or abstract members cannot be private.
        /// </summary>
        internal static string CSharpErrors_CS0621 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0621", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only use array initializer expressions to assign to array types. Try using a new expression instead..
        /// </summary>
        internal static string CSharpErrors_CS0622 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0622", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array initializers can only be used in a variable or field initializer. Try using a new expression instead..
        /// </summary>
        internal static string CSharpErrors_CS0623 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0623", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: instance field types marked with StructLayout(LayoutKind.Explicit) must have a FieldOffset attribute.
        /// </summary>
        internal static string CSharpErrors_CS0625 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0625", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional member {0} cannot implement interface member {1} in type {2}.
        /// </summary>
        internal static string CSharpErrors_CS0629 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0629", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ref and out are not valid in this context.
        /// </summary>
        internal static string CSharpErrors_CS0631 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0631", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument to the {0} attribute must be a valid identifier.
        /// </summary>
        internal static string CSharpErrors_CS0633 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0633", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : System.Interop.UnmanagedType.CustomMarshaller requires named arguments ComType and Marshal.
        /// </summary>
        internal static string CSharpErrors_CS0635 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0635", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FieldOffset attribute can only be placed on members of types marked with the StructLayout(LayoutKind.Explicit).
        /// </summary>
        internal static string CSharpErrors_CS0636 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0636", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FieldOffset attribute is not allowed on static or const fields.
        /// </summary>
        internal static string CSharpErrors_CS0637 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0637", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : attribute is only valid on classes derived from System.Attribute.
        /// </summary>
        internal static string CSharpErrors_CS0641 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0641", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} duplicate named attribute argument.
        /// </summary>
        internal static string CSharpErrors_CS0643 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0643", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot derive from special class {1}.
        /// </summary>
        internal static string CSharpErrors_CS0644 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0644", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier too long.
        /// </summary>
        internal static string CSharpErrors_CS0645 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0645", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify the DefaultMember attribute on a type containing an indexer.
        /// </summary>
        internal static string CSharpErrors_CS0646 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0646", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceError emitting {0} attribute -- {1}.
        /// </summary>
        internal static string CSharpErrors_CS0647 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0647", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a type not supported by the language.
        /// </summary>
        internal static string CSharpErrors_CS0648 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0648", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad array declarator: To declare a managed array the rank specifier precedes the variable&apos;s identifier. To declare a fixed size buffer field, use the fixed keyword before the field type..
        /// </summary>
        internal static string CSharpErrors_CS0650 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0650", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot apply attribute class {0} because it is abstract.
        /// </summary>
        internal static string CSharpErrors_CS0653 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0653", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid named attribute argument because it is not a valid attribute parameter type.
        /// </summary>
        internal static string CSharpErrors_CS0655 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0655", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing compiler required member {0}.
        /// </summary>
        internal static string CSharpErrors_CS0656 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0656", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot specify only Out attribute on a ref parameter. Use both In and Out attributes, or neither..
        /// </summary>
        internal static string CSharpErrors_CS0662 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0662", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define overloaded methods that differ only on ref and out..
        /// </summary>
        internal static string CSharpErrors_CS0663 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0663", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Literal of type double cannot be implicitly converted to type {0}; use an {1} suffix to create a literal of this type.
        /// </summary>
        internal static string CSharpErrors_CS0664 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0664", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : new protected member declared in struct.
        /// </summary>
        internal static string CSharpErrors_CS0666 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0666", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The feature {0} is deprecated. Please use {1} instead..
        /// </summary>
        internal static string CSharpErrors_CS0667 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0667", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two indexers have different names; the IndexerName attribute must be used with the same name on every indexer within a type.
        /// </summary>
        internal static string CSharpErrors_CS0668 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0668", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A class with the ComImport attribute cannot have a user-defined constructor.
        /// </summary>
        internal static string CSharpErrors_CS0669 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0669", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field cannot have void type.
        /// </summary>
        internal static string CSharpErrors_CS0670 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0670", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System.Void cannot be used from C# -- use typeof(void) to get the void type object..
        /// </summary>
        internal static string CSharpErrors_CS0673 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0673", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.ParamArrayAttribute&apos;. Use the &apos;params&apos; keyword instead..
        /// </summary>
        internal static string CSharpErrors_CS0674 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0674", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: a volatile field cannot be of the type {1}.
        /// </summary>
        internal static string CSharpErrors_CS0677 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0677", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: a field can not be both volatile and readonly.
        /// </summary>
        internal static string CSharpErrors_CS0678 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0678", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifier &apos;abstract&apos; is not valid on fields. Try using a property instead.
        /// </summary>
        internal static string CSharpErrors_CS0681 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0681", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot implement {1} because it is not supported by the language.
        /// </summary>
        internal static string CSharpErrors_CS0682 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0682", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} explicit method implementation cannot implement {1} because it is an accessor.
        /// </summary>
        internal static string CSharpErrors_CS0683 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0683", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional member {0} cannot have an out parameter.
        /// </summary>
        internal static string CSharpErrors_CS0685 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0685", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessor {0} cannot implement interface member {1} for type {2}. Use an explicit interface implementation..
        /// </summary>
        internal static string CSharpErrors_CS0686 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0686", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace alias qualifier &apos;::&apos; always resolves to a type or namespace so is illegal here. Consider using &apos;.&apos; instead..
        /// </summary>
        internal static string CSharpErrors_CS0687 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0687", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot derive from {0} because it is a type parameter.
        /// </summary>
        internal static string CSharpErrors_CS0689 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0689", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file {0} contains invalid metadata..
        /// </summary>
        internal static string CSharpErrors_CS0690 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0690", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate type parameter {0}.
        /// </summary>
        internal static string CSharpErrors_CS0692 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0692", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter {0} has the same name as the containing type, or method.
        /// </summary>
        internal static string CSharpErrors_CS0694 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0694", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot implement both {1} and {1} because they may unify for some type parameter substitutions.
        /// </summary>
        internal static string CSharpErrors_CS0695 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0695", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A generic type cannot derive from {0} because it is an attribute class.
        /// </summary>
        internal static string CSharpErrors_CS0698 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0698", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not define type parameter {1}.
        /// </summary>
        internal static string CSharpErrors_CS0699 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0699", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid constraint. A type used as a constraint must be an interface, a non-sealed class or a type parameter..
        /// </summary>
        internal static string CSharpErrors_CS0701 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0701", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint cannot be special class {0}.
        /// </summary>
        internal static string CSharpErrors_CS0702 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0702", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: constraint type {0} is less accessible than {1}.
        /// </summary>
        internal static string CSharpErrors_CS0703 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0703", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot do member lookup in {0} because it is a type parameter.
        /// </summary>
        internal static string CSharpErrors_CS0704 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0704", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid constraint type. A type used as a constraint must be an interface, a non-sealed class or a type parameter..
        /// </summary>
        internal static string CSharpErrors_CS0706 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0706", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot declare instance members in a static class.
        /// </summary>
        internal static string CSharpErrors_CS0708 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0708", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot derive from static class {1}.
        /// </summary>
        internal static string CSharpErrors_CS0709 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0709", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static classes cannot have instance constructors.
        /// </summary>
        internal static string CSharpErrors_CS0710 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0710", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static classes cannot contain destructors.
        /// </summary>
        internal static string CSharpErrors_CS0711 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0711", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the static class {0}.
        /// </summary>
        internal static string CSharpErrors_CS0712 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0712", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static class {0} cannot derive from type {1}. Static classes must derive from object..
        /// </summary>
        internal static string CSharpErrors_CS0713 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0713", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : static classes cannot implement interfaces.
        /// </summary>
        internal static string CSharpErrors_CS0714 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0714", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : static classes cannot contain user defined operators.
        /// </summary>
        internal static string CSharpErrors_CS0715 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0715", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert to static type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0716 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0716", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: static classes cannot be used as constraints.
        /// </summary>
        internal static string CSharpErrors_CS0717 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0717", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: static types cannot be used as type arguments.
        /// </summary>
        internal static string CSharpErrors_CS0718 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0718", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: array elements cannot be of static type.
        /// </summary>
        internal static string CSharpErrors_CS0719 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0719", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: cannot declare indexers in a static class.
        /// </summary>
        internal static string CSharpErrors_CS0720 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0720", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: static types cannot be used as parameters.
        /// </summary>
        internal static string CSharpErrors_CS0721 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0721", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: static types cannot be used as return types.
        /// </summary>
        internal static string CSharpErrors_CS0722 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0722", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare variable of static type {0}.
        /// </summary>
        internal static string CSharpErrors_CS0723 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0723", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string CSharpErrors_CS0724 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0724", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} is defined in this assembly, but a type forwarder is specified for it.
        /// </summary>
        internal static string CSharpErrors_CS0729 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0729", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot forward type {0} because it is a nested type of {1}.
        /// </summary>
        internal static string CSharpErrors_CS0730 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0730", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type forwarder for type {0} in assembly {1} causes a cycle.
        /// </summary>
        internal static string CSharpErrors_CS0731 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0731", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot forward generic type, {0}.
        /// </summary>
        internal static string CSharpErrors_CS0733 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0733", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /moduleassemblyname option may only be specified when building a target type of &apos;module&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0734 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0734", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type specified as an argument for TypeForwardedTo attribute.
        /// </summary>
        internal static string CSharpErrors_CS0735 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0735", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement interface member {1}. {2} cannot implement an interface member because it is static..
        /// </summary>
        internal static string CSharpErrors_CS0736 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0736", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement interface member {1}. {2} cannot implement an interface member because it is not public..
        /// </summary>
        internal static string CSharpErrors_CS0737 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0737", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement interface member {1}. {2} cannot implement {1} because it does not have the matching return type of {3}..
        /// </summary>
        internal static string CSharpErrors_CS0738 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0738", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} duplicate TypeForwardedToAttribute..
        /// </summary>
        internal static string CSharpErrors_CS0739 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0739", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A query body must end with a select clause or a group clause.
        /// </summary>
        internal static string CSharpErrors_CS0742 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0742", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected contextual keyword &apos;on&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0743 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0743", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected contextual keyword &apos;equals&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0744 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0744", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected contextual keyword &apos;by&apos;.
        /// </summary>
        internal static string CSharpErrors_CS0745 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0745", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid anonymous type member declarator. Anonymous type members must be declared with a member assignment, simple name or member access..
        /// </summary>
        internal static string CSharpErrors_CS0746 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0746", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid initializer member declarator..
        /// </summary>
        internal static string CSharpErrors_CS0747 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0747", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent lambda parameter usage; all parameter types must either be explicit or implicit..
        /// </summary>
        internal static string CSharpErrors_CS0748 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0748", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method cannot have access modifiers or the virtual, abstract, override, new, sealed, or extern modifiers..
        /// </summary>
        internal static string CSharpErrors_CS0750 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0750", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method must be declared in a partial class or partial struct.
        /// </summary>
        internal static string CSharpErrors_CS0751 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0751", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method cannot have out parameters.
        /// </summary>
        internal static string CSharpErrors_CS0752 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0752", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only methods, classes, structs, or interfaces may be partial..
        /// </summary>
        internal static string CSharpErrors_CS0753 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0753", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method may not explicitly implement an interface method..
        /// </summary>
        internal static string CSharpErrors_CS0754 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0754", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must be extension methods or neither may be an extension method..
        /// </summary>
        internal static string CSharpErrors_CS0755 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0755", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method may not have multiple defining declarations..
        /// </summary>
        internal static string CSharpErrors_CS0756 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0756", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method may not have multiple implementing declarations..
        /// </summary>
        internal static string CSharpErrors_CS0757 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0757", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must use a params parameter or neither may use a params parameter.
        /// </summary>
        internal static string CSharpErrors_CS0758 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0758", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No defining declaration found for implementing declaration of partial method {0}..
        /// </summary>
        internal static string CSharpErrors_CS0759 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0759", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial method declarations of {0} have inconsistent type parameter constraints..
        /// </summary>
        internal static string CSharpErrors_CS0761 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0761", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create delegate from method {0} because it is a partial method without an implementing declaration.
        /// </summary>
        internal static string CSharpErrors_CS0762 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0762", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must be static or neither may be static..
        /// </summary>
        internal static string CSharpErrors_CS0763 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0763", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must be unsafe or neither may be unsafe.
        /// </summary>
        internal static string CSharpErrors_CS0764 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0764", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial methods with only a defining declaration or removed conditional methods cannot be used in expression trees.
        /// </summary>
        internal static string CSharpErrors_CS0765 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0765", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial methods must have a void return type..
        /// </summary>
        internal static string CSharpErrors_CS0766 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0766", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified name for {0} is too long for debug information. Compile without &apos;/debug&apos; option..
        /// </summary>
        internal static string CSharpErrors_CS0811 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0811", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign {0} to an implicitly typed local.
        /// </summary>
        internal static string CSharpErrors_CS0815 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0815", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly typed locals must be initialized.
        /// </summary>
        internal static string CSharpErrors_CS0818 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0818", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly typed locals cannot have multiple declarators..
        /// </summary>
        internal static string CSharpErrors_CS0819 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0819", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign array initializer to an implicitly typed local.
        /// </summary>
        internal static string CSharpErrors_CS0820 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0820", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly typed locals cannot be fixed.
        /// </summary>
        internal static string CSharpErrors_CS0821 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0821", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly typed locals cannot be const.
        /// </summary>
        internal static string CSharpErrors_CS0822 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0822", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contextual keyword &apos;var&apos; may only appear within a local variable declaration..
        /// </summary>
        internal static string CSharpErrors_CS0825 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0825", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No best type found for implicitly typed array..
        /// </summary>
        internal static string CSharpErrors_CS0826 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0826", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign {0} to anonymous type property..
        /// </summary>
        internal static string CSharpErrors_CS0828 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0828", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a base access..
        /// </summary>
        internal static string CSharpErrors_CS0831 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0831", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an assignment operator..
        /// </summary>
        internal static string CSharpErrors_CS0832 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0832", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An anonymous type cannot have multiple properties with the same name..
        /// </summary>
        internal static string CSharpErrors_CS0833 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0833", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A lambda expression must have an expression body to be converted to an expression tree..
        /// </summary>
        internal static string CSharpErrors_CS0834 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0834", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert lambda to an expression tree whose type argument {0} is not a delegate type..
        /// </summary>
        internal static string CSharpErrors_CS0835 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0835", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use anonymous type in a constant expression..
        /// </summary>
        internal static string CSharpErrors_CS0836 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0836", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first operand of an &apos;is&apos; or &apos;as&apos; operator may not be a lambda expression or anonymous method..
        /// </summary>
        internal static string CSharpErrors_CS0837 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0837", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a multidimensional array initializer..
        /// </summary>
        internal static string CSharpErrors_CS0838 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0838", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument missing..
        /// </summary>
        internal static string CSharpErrors_CS0839 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0839", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must declare a body because it is not marked abstract or extern. Automatically implemented properties must define both get and set accessors..
        /// </summary>
        internal static string CSharpErrors_CS0840 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0840", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use variable {0} before it is declared..
        /// </summary>
        internal static string CSharpErrors_CS0841 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0841", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically implemented properties cannot be used inside a type marked with StructLayout(LayoutKind.Explicit)..
        /// </summary>
        internal static string CSharpErrors_CS0842 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0842", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing field for automatically implemented property {0} must be fully assigned before control is returned to the caller. Consider calling the default constructor from a constructor initializer..
        /// </summary>
        internal static string CSharpErrors_CS0843 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0843", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use local variable {0} before it is declared. The declaration of the local variable hides the field {0}..
        /// </summary>
        internal static string CSharpErrors_CS0844 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0844", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a coalescing operator with a null literal left-hand side..
        /// </summary>
        internal static string CSharpErrors_CS0845 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS0845", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier expected.
        /// </summary>
        internal static string CSharpErrors_CS1001 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ; expected.
        /// </summary>
        internal static string CSharpErrors_CS1002 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error, &apos;char&apos; expected.
        /// </summary>
        internal static string CSharpErrors_CS1003 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate {0} modifier.
        /// </summary>
        internal static string CSharpErrors_CS1004 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property accessor already defined.
        /// </summary>
        internal static string CSharpErrors_CS1007 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type byte, sbyte, short, ushort, int, uint, long, or ulong expected.
        /// </summary>
        internal static string CSharpErrors_CS1008 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized escape sequence.
        /// </summary>
        internal static string CSharpErrors_CS1009 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newline in constant.
        /// </summary>
        internal static string CSharpErrors_CS1010 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty character literal.
        /// </summary>
        internal static string CSharpErrors_CS1011 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many characters in character literal.
        /// </summary>
        internal static string CSharpErrors_CS1012 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number.
        /// </summary>
        internal static string CSharpErrors_CS1013 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A get or set accessor expected.
        /// </summary>
        internal static string CSharpErrors_CS1014 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object, string, or class type expected.
        /// </summary>
        internal static string CSharpErrors_CS1015 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named attribute argument expected.
        /// </summary>
        internal static string CSharpErrors_CS1016 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catch clauses cannot follow the general catch clause of a try statement.
        /// </summary>
        internal static string CSharpErrors_CS1017 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;this&apos; or &apos;base&apos; expected.
        /// </summary>
        internal static string CSharpErrors_CS1018 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1018", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloadable unary operator expected.
        /// </summary>
        internal static string CSharpErrors_CS1019 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloadable binary operator expected.
        /// </summary>
        internal static string CSharpErrors_CS1020 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integral constant is too large.
        /// </summary>
        internal static string CSharpErrors_CS1021 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type or namespace definition, or end-of-file expected.
        /// </summary>
        internal static string CSharpErrors_CS1022 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded statement cannot be a declaration or labeled statement.
        /// </summary>
        internal static string CSharpErrors_CS1023 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preprocessor directive expected.
        /// </summary>
        internal static string CSharpErrors_CS1024 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1024", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single-line comment or end-of-line expected.
        /// </summary>
        internal static string CSharpErrors_CS1025 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1025", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ) expected.
        /// </summary>
        internal static string CSharpErrors_CS1026 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1026", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #endif directive expected.
        /// </summary>
        internal static string CSharpErrors_CS1027 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1027", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected preprocessor directive.
        /// </summary>
        internal static string CSharpErrors_CS1028 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1028", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #error: {0}.
        /// </summary>
        internal static string CSharpErrors_CS1029 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1029", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type expected.
        /// </summary>
        internal static string CSharpErrors_CS1031 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1031", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define/undefine preprocessor symbols after first token in file.
        /// </summary>
        internal static string CSharpErrors_CS1032 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1032", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file has exceeded the limit of 16,707,565 lines representable in the PDB; debug information will be incorrect.
        /// </summary>
        internal static string CSharpErrors_CS1033 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1033", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiler limit exceeded: Line cannot exceed &apos;number&apos; characters.
        /// </summary>
        internal static string CSharpErrors_CS1034 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1034", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End-of-file found, &apos;*/&apos; expected.
        /// </summary>
        internal static string CSharpErrors_CS1035 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1035", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ( or . expected.
        /// </summary>
        internal static string CSharpErrors_CS1036 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1036", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloadable operator expected.
        /// </summary>
        internal static string CSharpErrors_CS1037 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1037", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #endregion directive expected.
        /// </summary>
        internal static string CSharpErrors_CS1038 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1038", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated string literal.
        /// </summary>
        internal static string CSharpErrors_CS1039 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1039", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preprocessor directives must appear as the first non-whitespace character on a line.
        /// </summary>
        internal static string CSharpErrors_CS1040 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1040", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier expected, &apos;keyword&apos; is a keyword.
        /// </summary>
        internal static string CSharpErrors_CS1041 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1041", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to { or ; expected.
        /// </summary>
        internal static string CSharpErrors_CS1043 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1043", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use more than one type in a for, using, fixed, or declaration statement.
        /// </summary>
        internal static string CSharpErrors_CS1044 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1044", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An add or remove accessor expected.
        /// </summary>
        internal static string CSharpErrors_CS1055 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1055", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected character &apos;character&apos;.
        /// </summary>
        internal static string CSharpErrors_CS1056 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1056", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: static classes cannot contain protected members.
        /// </summary>
        internal static string CSharpErrors_CS1057 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1057", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand of an increment or decrement operator must be a variable, property or indexer..
        /// </summary>
        internal static string CSharpErrors_CS1059 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1059", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not contain a definition for {1} and no extension method {2} accepting a first argument of type {0} could be found (are you missing a using directive or an assembly reference?)..
        /// </summary>
        internal static string CSharpErrors_CS1061 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1061", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} has a parameter modifier &apos;this&apos; which is not on the first parameter..
        /// </summary>
        internal static string CSharpErrors_CS1100 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter modifier &apos;ref&apos; cannot be used with &apos;this&apos;..
        /// </summary>
        internal static string CSharpErrors_CS1101 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1101", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter modifier &apos;out&apos; cannot be used with &apos;this&apos;..
        /// </summary>
        internal static string CSharpErrors_CS1102 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1102", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first parameter of an extension method cannot be of type {0}..
        /// </summary>
        internal static string CSharpErrors_CS1103 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1103", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter array cannot be used with &apos;this&apos; modifier on an extension method..
        /// </summary>
        internal static string CSharpErrors_CS1104 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1104", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension methods must be static..
        /// </summary>
        internal static string CSharpErrors_CS1105 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1105", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension methods must be defined in a non generic static class..
        /// </summary>
        internal static string CSharpErrors_CS1106 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1106", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter can only have one {0} modifier..
        /// </summary>
        internal static string CSharpErrors_CS1107 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1107", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter cannot have all the specified modifiers; there are too many modifiers on the parameter..
        /// </summary>
        internal static string CSharpErrors_CS1108 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1108", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension Methods must be defined on top level static classes, {0} is a nested class..
        /// </summary>
        internal static string CSharpErrors_CS1109 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1109", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;this&apos; modifier on first parameter of method declaration without a reference to System.Core.dll. Add a reference to System.Core.dll or remove &apos;this&apos; modifier from the method declaration..
        /// </summary>
        internal static string CSharpErrors_CS1110 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1110", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.Runtime.CompilerServices.ExtensionAttribute&apos;. Use the &apos;this&apos; keyword instead..
        /// </summary>
        internal static string CSharpErrors_CS1112 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1112", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension methods {0} defined on value type {1} cannot be used to create delegates..
        /// </summary>
        internal static string CSharpErrors_CS1113 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1113", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for method {0} takes {1} arguments.
        /// </summary>
        internal static string CSharpErrors_CS1501 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1501", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method {0} for the collection initializer has some invalid arguments.
        /// </summary>
        internal static string CSharpErrors_CS1502 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1502", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method {0} for the collection initializer has some invalid arguments.
        /// </summary>
        internal static string CSharpErrors_CS1503 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1503", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file {0} could not be opened ({1}).
        /// </summary>
        internal static string CSharpErrors_CS1504 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1504", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot link resource file {0} when building a module.
        /// </summary>
        internal static string CSharpErrors_CS1507 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1507", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource identifier {0} has already been used in this assembly.
        /// </summary>
        internal static string CSharpErrors_CS1508 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1508", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced file {0} is not an assembly; use &apos;/addmodule&apos; option instead.
        /// </summary>
        internal static string CSharpErrors_CS1509 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1509", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ref or out argument must be an assignable variable.
        /// </summary>
        internal static string CSharpErrors_CS1510 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1510", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;base&apos; is not available in a static method.
        /// </summary>
        internal static string CSharpErrors_CS1511 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1511", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;base&apos; is not available in the current context.
        /// </summary>
        internal static string CSharpErrors_CS1512 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1512", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to } expected.
        /// </summary>
        internal static string CSharpErrors_CS1513 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1513", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to { expected.
        /// </summary>
        internal static string CSharpErrors_CS1514 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1514", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;in&apos; expected.
        /// </summary>
        internal static string CSharpErrors_CS1515 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1515", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid preprocessor expression.
        /// </summary>
        internal static string CSharpErrors_CS1517 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1517", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected class, delegate, enum, interface, or struct.
        /// </summary>
        internal static string CSharpErrors_CS1518 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1518", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token {0} in class, struct, or interface member declaration.
        /// </summary>
        internal static string CSharpErrors_CS1519 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1519", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method must have a return type.
        /// </summary>
        internal static string CSharpErrors_CS1520 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1520", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid base type.
        /// </summary>
        internal static string CSharpErrors_CS1521 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1521", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected catch or finally.
        /// </summary>
        internal static string CSharpErrors_CS1524 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1524", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid expression term {0}.
        /// </summary>
        internal static string CSharpErrors_CS1525 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1525", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new expression requires (), [], or {} after type.
        /// </summary>
        internal static string CSharpErrors_CS1526 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1526", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elements defined in a namespace cannot be explicitly declared as private, protected, or protected internal.
        /// </summary>
        internal static string CSharpErrors_CS1527 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1527", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected ; or = (cannot specify constructor arguments in declaration).
        /// </summary>
        internal static string CSharpErrors_CS1528 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1528", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A using clause must precede all other elements defined in the namespace except extern alias declarations.
        /// </summary>
        internal static string CSharpErrors_CS1529 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1529", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;new&apos; is not allowed on elements defined in a namespace.
        /// </summary>
        internal static string CSharpErrors_CS1530 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1530", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded binary operator {0} takes two parameters.
        /// </summary>
        internal static string CSharpErrors_CS1534 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1534", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded unary operator {0} takes one parameter.
        /// </summary>
        internal static string CSharpErrors_CS1535 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1535", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter type void.
        /// </summary>
        internal static string CSharpErrors_CS1536 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1536", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The using alias {0} appeared previously in this namespace.
        /// </summary>
        internal static string CSharpErrors_CS1537 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1537", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access protected member {0} via a qualifier of type {1}; the qualifier must be of type {2} (or derived from it).
        /// </summary>
        internal static string CSharpErrors_CS1540 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1540", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid reference option: {0} — cannot reference directories.
        /// </summary>
        internal static string CSharpErrors_CS1541 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1541", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be added to this assembly because it already is an assembly; use &apos;/R&apos; option instead.
        /// </summary>
        internal static string CSharpErrors_CS1542 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1542", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event {0} is not supported by the language; try directly calling accessor methods {1} or {2}.
        /// </summary>
        internal static string CSharpErrors_CS1545 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1545", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event {0} is not supported by the language; try directly calling accessor method {1}.
        /// </summary>
        internal static string CSharpErrors_CS1546 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1546", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;void&apos; cannot be used in this context.
        /// </summary>
        internal static string CSharpErrors_CS1547 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1547", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cryptographic failure while signing assembly {0} — {1}.
        /// </summary>
        internal static string CSharpErrors_CS1548 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1548", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appropriate cryptographic service not found.
        /// </summary>
        internal static string CSharpErrors_CS1549 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1549", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexers must have at least one parameter.
        /// </summary>
        internal static string CSharpErrors_CS1551 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1551", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array type specifier, [], must appear before parameter name.
        /// </summary>
        internal static string CSharpErrors_CS1552 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1552", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration is not valid; use &apos;{0} operator {1} (...&apos; instead.
        /// </summary>
        internal static string CSharpErrors_CS1553 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1553", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration is not valid; use &apos;{0} operator {1} (...&apos; instead.
        /// </summary>
        internal static string CSharpErrors_CS1554 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1554", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find {0} specified for Main method.
        /// </summary>
        internal static string CSharpErrors_CS1555 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1555", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} specified for Main method must be a valid class or struct.
        /// </summary>
        internal static string CSharpErrors_CS1556 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1556", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use {0} for Main method because it is in a different output file.
        /// </summary>
        internal static string CSharpErrors_CS1557 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1557", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not have a suitable static Main method.
        /// </summary>
        internal static string CSharpErrors_CS1558 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1558", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use {0} for Main method because it is imported.
        /// </summary>
        internal static string CSharpErrors_CS1559 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1559", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid filename specified for preprocessor directive. Filename is too long or not a valid filename.
        /// </summary>
        internal static string CSharpErrors_CS1560 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1560", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output filename is too long or invalid.
        /// </summary>
        internal static string CSharpErrors_CS1561 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1561", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outputs without source must have the /out option specified.
        /// </summary>
        internal static string CSharpErrors_CS1562 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1562", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output {0} does not have any source files.
        /// </summary>
        internal static string CSharpErrors_CS1563 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1563", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting options specified: Win32 resource file; Win32 manifest..
        /// </summary>
        internal static string CSharpErrors_CS1564 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1564", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting options specified: Win32 resource file; Win32 icon.
        /// </summary>
        internal static string CSharpErrors_CS1565 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1565", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceError reading resource file {0} — {1}.
        /// </summary>
        internal static string CSharpErrors_CS1566 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1566", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceError generating Win32 resource: {0}.
        /// </summary>
        internal static string CSharpErrors_CS1567 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1567", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceError generating XML documentation file {0} ({1}).
        /// </summary>
        internal static string CSharpErrors_CS1569 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1569", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A stackalloc expression requires [] after type.
        /// </summary>
        internal static string CSharpErrors_CS1575 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1575", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The line number specified for #line directive is missing or invalid.
        /// </summary>
        internal static string CSharpErrors_CS1576 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1576", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly generation failed — reason.
        /// </summary>
        internal static string CSharpErrors_CS1577 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1577", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filename, single-line comment or end-of-line expected.
        /// </summary>
        internal static string CSharpErrors_CS1578 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1578", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach statement cannot operate on variables of type {0} because {1} does not contain a public definition for {2}.
        /// </summary>
        internal static string CSharpErrors_CS1579 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1579", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid Win32 resource file.
        /// </summary>
        internal static string CSharpErrors_CS1583 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1583", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member modifier {0} must precede the member type and name.
        /// </summary>
        internal static string CSharpErrors_CS1585 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1585", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array creation must have array size or array initializer.
        /// </summary>
        internal static string CSharpErrors_CS1586 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1586", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine common language runtime directory -- {0}.
        /// </summary>
        internal static string CSharpErrors_CS1588 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1588", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate {0} does not take {1} arguments.
        /// </summary>
        internal static string CSharpErrors_CS1593 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1593", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate {0} has some invalid arguments.
        /// </summary>
        internal static string CSharpErrors_CS1594 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1594", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semicolon after method or accessor block is not valid.
        /// </summary>
        internal static string CSharpErrors_CS1597 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1597", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method or delegate cannot return type {0}.
        /// </summary>
        internal static string CSharpErrors_CS1599 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1599", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation cancelled by user.
        /// </summary>
        internal static string CSharpErrors_CS1600 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1600", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method or delegate parameter cannot be of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS1601 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1601", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to {0} because it is read-only.
        /// </summary>
        internal static string CSharpErrors_CS1604 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1604", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass {0} as a ref or out argument because it is read-only.
        /// </summary>
        internal static string CSharpErrors_CS1605 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1605", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly signing failed; output may not be signed -- {0}.
        /// </summary>
        internal static string CSharpErrors_CS1606 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1606", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Required attribute is not permitted on C# types.
        /// </summary>
        internal static string CSharpErrors_CS1608 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1608", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifiers cannot be placed on event accessor declarations.
        /// </summary>
        internal static string CSharpErrors_CS1609 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1609", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The params parameter cannot be declared as ref or out.
        /// </summary>
        internal static string CSharpErrors_CS1611 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1611", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify the return value of {0} because it is not a variable.
        /// </summary>
        internal static string CSharpErrors_CS1612 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1612", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The managed coclass wrapper class {0} for interface {1} cannot be found (are you missing an assembly reference?).
        /// </summary>
        internal static string CSharpErrors_CS1613 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1613", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is ambiguous; between {1} and {2}. use either &apos;@{0}&apos; or &apos;{0}Attribute&apos;.
        /// </summary>
        internal static string CSharpErrors_CS1614 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1614", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} should not be passed with the {1} keyword.
        /// </summary>
        internal static string CSharpErrors_CS1615 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1615", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option {0} for /langversion; must be ISO-1, ISO-2 or Default.
        /// </summary>
        internal static string CSharpErrors_CS1617 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1617", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create delegate with {0} because it has a Conditional attribute.
        /// </summary>
        internal static string CSharpErrors_CS1618 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1618", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create temporary file {0} -- {1}.
        /// </summary>
        internal static string CSharpErrors_CS1619 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1619", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be passed with the {1} keyword.
        /// </summary>
        internal static string CSharpErrors_CS1620 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1620", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The yield statement cannot be used inside an anonymous method or lambda expression.
        /// </summary>
        internal static string CSharpErrors_CS1621 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1621", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return a value from an iterator. Use the yield return statement to return a value, or yield break to end the iteration..
        /// </summary>
        internal static string CSharpErrors_CS1622 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1622", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterators cannot have ref or out parameters.
        /// </summary>
        internal static string CSharpErrors_CS1623 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1623", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The body of {0} cannot be an iterator block because {1} is not an iterator interface type.
        /// </summary>
        internal static string CSharpErrors_CS1624 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1624", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot yield in the body of a finally clause.
        /// </summary>
        internal static string CSharpErrors_CS1625 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1625", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot yield a value in the body of a try block with a catch clause.
        /// </summary>
        internal static string CSharpErrors_CS1626 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1626", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression expected after yield return.
        /// </summary>
        internal static string CSharpErrors_CS1627 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1627", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use ref or out parameter {0} inside an anonymous method, lambda expression, or query expression.
        /// </summary>
        internal static string CSharpErrors_CS1628 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1628", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsafe code may not appear in iterators.
        /// </summary>
        internal static string CSharpErrors_CS1629 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1629", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option {0} for /errorreport; must be prompt, send, queue, or none.
        /// </summary>
        internal static string CSharpErrors_CS1630 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1630", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot yield a value in the body of a catch clause.
        /// </summary>
        internal static string CSharpErrors_CS1631 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1631", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot leave the body of an anonymous method or lambda expression.
        /// </summary>
        internal static string CSharpErrors_CS1632 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1632", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterators cannot have unsafe parameters or yield types.
        /// </summary>
        internal static string CSharpErrors_CS1637 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1637", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a reserved identifier and cannot be used when ISO language version mode is used.
        /// </summary>
        internal static string CSharpErrors_CS1638 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1638", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The managed coclass wrapper class signature {0} for interface {1} is not a valid class name signature.
        /// </summary>
        internal static string CSharpErrors_CS1639 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1639", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach statement cannot operate on variables of type {0} because it implements multiple instantiations of {1}, try casting to a specific interface instantiation.
        /// </summary>
        internal static string CSharpErrors_CS1640 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1640", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fixed size buffer field must have the array size specifier after the field name.
        /// </summary>
        internal static string CSharpErrors_CS1641 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1641", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffer fields may only be members of structs..
        /// </summary>
        internal static string CSharpErrors_CS1642 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1642", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all code paths return a value in method of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS1643 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1643", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature {0} is not part of the standardized ISO C# language specification, and may not be accepted by other compilers.
        /// </summary>
        internal static string CSharpErrors_CS1644 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1644", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword, identifier, or string expected after verbatim specifier: .
        /// </summary>
        internal static string CSharpErrors_CS1646 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1646", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression is too long or complex to compile near {0}.
        /// </summary>
        internal static string CSharpErrors_CS1647 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1647", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field {0} cannot be modified (except in a constructor or a variable initializer).
        /// </summary>
        internal static string CSharpErrors_CS1648 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1648", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field {0} cannot be passed ref or out (except in a constructor).
        /// </summary>
        internal static string CSharpErrors_CS1649 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1649", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field {0} cannot be assigned to (except in a static constructor or a variable initializer).
        /// </summary>
        internal static string CSharpErrors_CS1650 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1650", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field {0} cannot be passed ref or out (except in a static constructor).
        /// </summary>
        internal static string CSharpErrors_CS1651 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1651", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify members of {0} because it is a {1}.
        /// </summary>
        internal static string CSharpErrors_CS1654 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1654", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass fields of {0} as a ref or out argument because it is a {1}.
        /// </summary>
        internal static string CSharpErrors_CS1655 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1655", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to {0} because it is a {1}.
        /// </summary>
        internal static string CSharpErrors_CS1656 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1656", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass {0} as a ref or out argument because {1}.
        /// </summary>
        internal static string CSharpErrors_CS1657 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1657", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert anonymous method block to type {0} because it is not a delegate type.
        /// </summary>
        internal static string CSharpErrors_CS1660 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1660", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert anonymous method block to delegate type {0} because the specified block&apos;s parameter types do not match the delegate parameter types.
        /// </summary>
        internal static string CSharpErrors_CS1661 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1661", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert anonymous method block to delegate type {0} because some of the return types in the block are not implicitly convertible to the delegate return type.
        /// </summary>
        internal static string CSharpErrors_CS1662 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1662", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffer type must be one of the following: bool, byte, short, int, long, char, sbyte, ushort, uint, ulong, float or double.
        /// </summary>
        internal static string CSharpErrors_CS1663 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1663", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffer of length {0} and type {1} is too big.
        /// </summary>
        internal static string CSharpErrors_CS1664 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1664", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffers must have a length greater than zero.
        /// </summary>
        internal static string CSharpErrors_CS1665 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1665", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use fixed size buffers contained in unfixed expressions. Try using the fixed statement..
        /// </summary>
        internal static string CSharpErrors_CS1666 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1666", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute {0} is not valid on property or event accessors. It is valid on {1} declarations only..
        /// </summary>
        internal static string CSharpErrors_CS1667 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1667", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to params is not valid in this context.
        /// </summary>
        internal static string CSharpErrors_CS1670 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1670", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A namespace declaration cannot have modifiers or attributes.
        /// </summary>
        internal static string CSharpErrors_CS1671 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1671", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option {0} for /platform; must be anycpu, x86, Itanium or x64.
        /// </summary>
        internal static string CSharpErrors_CS1672 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1672", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous methods, lambda expressions, and query expressions inside structs cannot access instance members of &apos;this&apos;. Consider copying &apos;this&apos; to a local variable outside the anonymous method, lambda expression or query expression and using the local instead..
        /// </summary>
        internal static string CSharpErrors_CS1673 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1673", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: type used in a using statement must be implicitly convertible to &apos;System.IDisposable&apos;.
        /// </summary>
        internal static string CSharpErrors_CS1674 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1674", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enums cannot have type parameters.
        /// </summary>
        internal static string CSharpErrors_CS1675 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1675", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} must be declared with the {1} keyword.
        /// </summary>
        internal static string CSharpErrors_CS1676 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1676", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} should not be declared with the {1} keyword.
        /// </summary>
        internal static string CSharpErrors_CS1677 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1677", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} is declared as type {1} but should be {2}.
        /// </summary>
        internal static string CSharpErrors_CS1678 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1678", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid extern alias for {0}; {1} is not a valid identifier.
        /// </summary>
        internal static string CSharpErrors_CS1679 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1679", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid reference alias option: &apos;alias=&apos; -- missing filename..
        /// </summary>
        internal static string CSharpErrors_CS1680 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1680", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot redefine the global extern alias.
        /// </summary>
        internal static string CSharpErrors_CS1681 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1681", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local {0} or its members cannot have their address taken and be used inside an anonymous method or lambda expression.
        /// </summary>
        internal static string CSharpErrors_CS1686 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1686", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert anonymous method block without a parameter list to delegate type {0} because it has one or more out parameters.
        /// </summary>
        internal static string CSharpErrors_CS1688 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1688", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute {0} is only valid on methods or attribute classes.
        /// </summary>
        internal static string CSharpErrors_CS1689 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1689", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An assembly with the same simple name {0} has already been imported. Try removing one of the references or sign them to enable side-by-side..
        /// </summary>
        internal static string CSharpErrors_CS1703 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1703", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An assembly with the same simple name {0} has already been imported. Try removing one of the references or sign them to enable side-by-side..
        /// </summary>
        internal static string CSharpErrors_CS1704 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1704", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly {0} uses {1} which has a higher version than referenced assembly {2}.
        /// </summary>
        internal static string CSharpErrors_CS1705 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1705", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression cannot contain anonymous methods or lambda expressions.
        /// </summary>
        internal static string CSharpErrors_CS1706 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1706", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffers can only be accessed through locals or fields.
        /// </summary>
        internal static string CSharpErrors_CS1708 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1708", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error building metadata name for type {0} — {1}.
        /// </summary>
        internal static string CSharpErrors_CS1713 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1713", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base class or interface of {0} could not be resolved or is invalid.
        /// </summary>
        internal static string CSharpErrors_CS1714 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1714", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: type must be {1} to match overridden member {2}.
        /// </summary>
        internal static string CSharpErrors_CS1715 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1715", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.Runtime.CompilerServices.FixedBuffer&apos; attribute. Use the &apos;fixed&apos; field modifier instead..
        /// </summary>
        internal static string CSharpErrors_CS1716 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1716", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceError reading Win32 resource file {0} -- {1}.
        /// </summary>
        internal static string CSharpErrors_CS1719 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1719", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class {0} cannot have multiple base classes: {1} and {2}.
        /// </summary>
        internal static string CSharpErrors_CS1721 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1721", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base class {0} must come before any interfaces.
        /// </summary>
        internal static string CSharpErrors_CS1722 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1722", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value specified for the argument to &apos;System.Runtime.InteropServices.DefaultCharSetAttribute&apos; is not valid.
        /// </summary>
        internal static string CSharpErrors_CS1724 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1724", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend assembly reference {0} is invalid. InternalsVisibleTo declarations cannot have a version, culture, public key token, or processor architecture specified..
        /// </summary>
        internal static string CSharpErrors_CS1725 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1725", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend assembly reference {0} is invalid. Strong-name signed assemblies must specify a public key in their InternalsVisibleTo declarations..
        /// </summary>
        internal static string CSharpErrors_CS1726 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1726", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send error report automatically without authorization. Please visit {0} to authorize sending error report..
        /// </summary>
        internal static string CSharpErrors_CS1727 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1727", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot bind delegate to {0} because it is a member of {1}.
        /// </summary>
        internal static string CSharpErrors_CS1728 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1728", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not contain a constructor that takes {1} arguments..
        /// </summary>
        internal static string CSharpErrors_CS1729 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1729", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly and module attributes must precede all other elements defined in a file except using clauses and extern alias declarations..
        /// </summary>
        internal static string CSharpErrors_CS1730 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1730", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert {0} to delegate because some of the return types in the block are not implicitly convertible to the delegate return type..
        /// </summary>
        internal static string CSharpErrors_CS1731 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1731", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected parameter..
        /// </summary>
        internal static string CSharpErrors_CS1732 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1732", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected expression..
        /// </summary>
        internal static string CSharpErrors_CS1733 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1733", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceWarning level must be in the range 0-4.
        /// </summary>
        internal static string CSharpErrors_CS1900 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1900", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option {0} for /debug; must be full or pdbonly.
        /// </summary>
        internal static string CSharpErrors_CS1902 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1902", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option {0}; Resource visibility must be either &apos;public&apos; or &apos;private&apos;.
        /// </summary>
        internal static string CSharpErrors_CS1906 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1906", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the argument to the DefaultValue attribute must match the parameter type.
        /// </summary>
        internal static string CSharpErrors_CS1908 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1908", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DefaultValue attribute is not applicable on parameters of type {0}.
        /// </summary>
        internal static string CSharpErrors_CS1909 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1909", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument of type {0} is not applicable for the DefaultValue attribute.
        /// </summary>
        internal static string CSharpErrors_CS1910 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1910", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate initialization of member {0}.
        /// </summary>
        internal static string CSharpErrors_CS1912 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1912", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member {0} cannot be initialized. It is not a field or property..
        /// </summary>
        internal static string CSharpErrors_CS1913 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1913", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static field {0} cannot be assigned in an object initializer.
        /// </summary>
        internal static string CSharpErrors_CS1914 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1914", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of read-only field {0} of type {1} cannot be assigned with an object initializer because it is of a value type..
        /// </summary>
        internal static string CSharpErrors_CS1917 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1917", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of property {0} of type {1} cannot be assigned with an object initializer because it is of a value type..
        /// </summary>
        internal static string CSharpErrors_CS1918 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1918", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsafe type {0} cannot be used in object creation..
        /// </summary>
        internal static string CSharpErrors_CS1919 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1919", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element initializer cannot be empty..
        /// </summary>
        internal static string CSharpErrors_CS1920 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1920", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded method match for {0} has wrong signature for the initializer element. The initializable Add must be an accessible instance method..
        /// </summary>
        internal static string CSharpErrors_CS1921 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1921", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection initializer requires its type {0} to implement System.Collections.IEnumerable..
        /// </summary>
        internal static string CSharpErrors_CS1922 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1922", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize object of type {0} with a collection initializer..
        /// </summary>
        internal static string CSharpErrors_CS1925 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1925", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SourceError reading Win32 manifest file {0} -- {1}..
        /// </summary>
        internal static string CSharpErrors_CS1926 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1926", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not contain a definition for {1} and the best extension method overload {2} has some invalid arguments..
        /// </summary>
        internal static string CSharpErrors_CS1928 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1928", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance argument: cannot convert from {0} to {1}..
        /// </summary>
        internal static string CSharpErrors_CS1929 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1929", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range variable {0} has already been declared.
        /// </summary>
        internal static string CSharpErrors_CS1930 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1930", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range variable {0} conflicts with a previous declaration of {1}..
        /// </summary>
        internal static string CSharpErrors_CS1931 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1931", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign {0} to a range variable..
        /// </summary>
        internal static string CSharpErrors_CS1932 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1932", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression cannot contain query expressions.
        /// </summary>
        internal static string CSharpErrors_CS1933 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1933", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an implementation of the query pattern for source type {0}. {1} not found. Consider explicitly specifying the type of the range variable {2}..
        /// </summary>
        internal static string CSharpErrors_CS1934 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1934", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an implementation of the query pattern for source type {0}. {1} not found. Are you missing a reference to &apos;System.Core.dll&apos; or a using directive for &apos;System.Linq&apos;?.
        /// </summary>
        internal static string CSharpErrors_CS1935 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1935", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an implementation of the query pattern for source type {0}. {1} not found..
        /// </summary>
        internal static string CSharpErrors_CS1936 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1936", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name {0} is not in scope on the left side of &apos;equals&apos;. Consider swapping the expressions on either side of &apos;equals&apos;..
        /// </summary>
        internal static string CSharpErrors_CS1937 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1937", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name {0} is not in scope on the right side of &apos;equals&apos;. Consider swapping the expressions on either side of &apos;equals&apos;..
        /// </summary>
        internal static string CSharpErrors_CS1938 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1938", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass the range variable {0} as an out or ref parameter..
        /// </summary>
        internal static string CSharpErrors_CS1939 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1939", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple implementations of the query pattern were found for source type {0}. Ambiguous call to {1}..
        /// </summary>
        internal static string CSharpErrors_CS1940 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1940", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of one of the expressions in the {0} clause is incorrect. Type inference failed in the call to {1}..
        /// </summary>
        internal static string CSharpErrors_CS1941 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1941", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the expression in the {0} clause is incorrect. Type inference failed in the call to {1}..
        /// </summary>
        internal static string CSharpErrors_CS1942 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1942", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression of type {0} is not allowed in a subsequent from clause in a query expression with source type {1}. Type inference failed in the call to {2}..
        /// </summary>
        internal static string CSharpErrors_CS1943 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1943", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an unsafe pointer operation.
        /// </summary>
        internal static string CSharpErrors_CS1944 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1944", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an anonymous method expression..
        /// </summary>
        internal static string CSharpErrors_CS1945 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1945", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An anonymous method expression cannot be converted to an expression tree..
        /// </summary>
        internal static string CSharpErrors_CS1946 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1946", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range variable {0} cannot be assigned to -- it is read only..
        /// </summary>
        internal static string CSharpErrors_CS1947 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1947", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range variable {0} cannot have the same name as a method type parameter.
        /// </summary>
        internal static string CSharpErrors_CS1948 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1948", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contextual keyword &apos;var&apos; cannot be used in a range variable declaration..
        /// </summary>
        internal static string CSharpErrors_CS1949 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1949", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method {0} for the collection initializer has some invalid arguments..
        /// </summary>
        internal static string CSharpErrors_CS1950 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1950", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain an out or ref parameter..
        /// </summary>
        internal static string CSharpErrors_CS1951 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1951", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a method with variable arguments.
        /// </summary>
        internal static string CSharpErrors_CS1952 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1952", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a method group..
        /// </summary>
        internal static string CSharpErrors_CS1953 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1953", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded method match {0} for the collection initializer element cannot be used. Collection initializer &apos;Add&apos; methods cannot have ref or out parameters..
        /// </summary>
        internal static string CSharpErrors_CS1954 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1954", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-invocable member {0} cannot be used like a method..
        /// </summary>
        internal static string CSharpErrors_CS1955 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1955", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object and collection initializer expressions may not be applied to a delegate creation expression,.
        /// </summary>
        internal static string CSharpErrors_CS1958 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1958", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is of type {1}. The type specified in a constant declaration must be sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, bool, string, an enum-type, or a reference-type..
        /// </summary>
        internal static string CSharpErrors_CS1959 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS1959", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file {0} could not be found.
        /// </summary>
        internal static string CSharpErrors_CS2001 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response file {0} included multiple times.
        /// </summary>
        internal static string CSharpErrors_CS2003 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing file specification for {0} option.
        /// </summary>
        internal static string CSharpErrors_CS2005 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line syntax error: Missing {0} for {1} option.
        /// </summary>
        internal static string CSharpErrors_CS2006 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized command-line option: {0}.
        /// </summary>
        internal static string CSharpErrors_CS2007 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No inputs specified.
        /// </summary>
        internal static string CSharpErrors_CS2008 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open response file {0}.
        /// </summary>
        internal static string CSharpErrors_CS2011 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open {0} for writing.
        /// </summary>
        internal static string CSharpErrors_CS2012 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid image base number {0}.
        /// </summary>
        internal static string CSharpErrors_CS2013 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a binary file instead of a text file.
        /// </summary>
        internal static string CSharpErrors_CS2015 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code page {0} is invalid or not installed.
        /// </summary>
        internal static string CSharpErrors_CS2016 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify /main if building a module or library.
        /// </summary>
        internal static string CSharpErrors_CS2017 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find messages file &apos;cscmsgs.dll&apos;.
        /// </summary>
        internal static string CSharpErrors_CS2018 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2018", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid target type for /target: must specify &apos;exe&apos;, &apos;winexe&apos;, &apos;library&apos;, or &apos;module&apos;.
        /// </summary>
        internal static string CSharpErrors_CS2019 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the first set of input files can build a target other than &apos;module&apos;.
        /// </summary>
        internal static string CSharpErrors_CS2020 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name {0} is too long or invalid.
        /// </summary>
        internal static string CSharpErrors_CS2021 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options &apos;/out&apos; and &apos;/target&apos; must appear before source file names.
        /// </summary>
        internal static string CSharpErrors_CS2022 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file section alignment number &apos;#&apos;.
        /// </summary>
        internal static string CSharpErrors_CS2024 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2024", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character {0} is not allowed on the command-line or in response files.
        /// </summary>
        internal static string CSharpErrors_CS2032 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2032", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create short filename {0} when a long filename with the same short filename already exists.
        /// </summary>
        internal static string CSharpErrors_CS2033 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2033", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A /reference option that declares an extern alias can only have one filename. To specify multiple aliases or filenames, use multiple /reference options..
        /// </summary>
        internal static string CSharpErrors_CS2034 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2034", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;Command-line syntax error: Missing &apos;:&amp;lt;number&amp;gt;&apos; for {0} option.
        /// </summary>
        internal static string CSharpErrors_CS2035 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2035", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /pdb option requires that the /debug option also be used..
        /// </summary>
        internal static string CSharpErrors_CS2036 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS2036", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program {0} does not contain a static &apos;Main&apos; method suitable for an entry point.
        /// </summary>
        internal static string CSharpErrors_CS5001 {
            get {
                return ResourceManager.GetString("CSharpErrors_CS5001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has the wrong signature to be an entry point .
        /// </summary>
        internal static string CSharpWarnings_CS0028 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0028", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event {0} is never used.
        /// </summary>
        internal static string CSharpWarnings_CS0067 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0067", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;l&apos; suffix is easily confused with the digit &apos;1&apos; -- use &apos;L&apos; for clarity.
        /// </summary>
        internal static string CSharpWarnings_CS0078 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0078", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The using directive for {0} appeared previously in this namespace.
        /// </summary>
        internal static string CSharpWarnings_CS0105 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0105", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hides inherited member {1}. Use the new keyword if hiding was intended..
        /// </summary>
        internal static string CSharpWarnings_CS0108 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0108", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member {0} does not hide an inherited member. The new keyword is not required.
        /// </summary>
        internal static string CSharpWarnings_CS0109 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0109", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hides inherited member {1}. To make the current method override that implementation, add the override keyword. Otherwise add the new keyword..
        /// </summary>
        internal static string CSharpWarnings_CS0114 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0114", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unreachable code detected.
        /// </summary>
        internal static string CSharpWarnings_CS0162 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0162", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This label has not been referenced.
        /// </summary>
        internal static string CSharpWarnings_CS0164 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0164", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable {0} is assigned but its value is never used.
        /// </summary>
        internal static string CSharpWarnings_CS0168 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0168", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The private field {0} is never used.
        /// </summary>
        internal static string CSharpWarnings_CS0169 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0169", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given expression is always of the provided ({0}) type.
        /// </summary>
        internal static string CSharpWarnings_CS0183 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0183", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given expression is never of the provided ({0}) type.
        /// </summary>
        internal static string CSharpWarnings_CS0184 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0184", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passing {0} as ref or out or taking its address may cause a runtime exception because it is a field of a marshal-by-reference class.
        /// </summary>
        internal static string CSharpWarnings_CS0197 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0197", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable {0} is assigned but its value is never used.
        /// </summary>
        internal static string CSharpWarnings_CS0219 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0219", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexing an array with a negative index (array indices always start at zero).
        /// </summary>
        internal static string CSharpWarnings_CS0251 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0251", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible unintended reference comparison; to get a value comparison, cast the left hand side to type {0}.
        /// </summary>
        internal static string CSharpWarnings_CS0252 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0252", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible unintended reference comparison; to get a value comparison, cast the right hand side to type {0}.
        /// </summary>
        internal static string CSharpWarnings_CS0253 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0253", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement the {1} pattern. {2} is ambiguous with {2}..
        /// </summary>
        internal static string CSharpWarnings_CS0278 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0278", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement the {1} pattern. {2} is either static or not public..
        /// </summary>
        internal static string CSharpWarnings_CS0279 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0279", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not implement the {1} pattern. {2} has the wrong signature..
        /// </summary>
        internal static string CSharpWarnings_CS0280 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0280", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no defined ordering between fields in multiple declarations of partial class or struct {0}. To specify an ordering, all instance fields must be in the same declaration..
        /// </summary>
        internal static string CSharpWarnings_CS0282 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0282", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : an entry point cannot be generic or in a generic type.
        /// </summary>
        internal static string CSharpWarnings_CS0402 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0402", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The private field {0} is assigned but its value is never used.
        /// </summary>
        internal static string CSharpWarnings_CS0414 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0414", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous reference in cref attribute: {0}. Assuming {1}, but could have also matched other overloads including {2}..
        /// </summary>
        internal static string CSharpWarnings_CS0419 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0419", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: a reference to a volatile field will not be treated as volatile.
        /// </summary>
        internal static string CSharpWarnings_CS0420 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0420", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /incremental option is no longer supported.
        /// </summary>
        internal static string CSharpWarnings_CS0422 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0422", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unreachable expression code detected .
        /// </summary>
        internal static string CSharpWarnings_CS0429 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0429", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace {0} in {1} conflicts with the imported type {2} in {3}. Using the namespace defined in {1}...
        /// </summary>
        internal static string CSharpWarnings_CS0435 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0435", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} in {1} conflicts with the imported type {2} in {3}. Using the type defined in {1}..
        /// </summary>
        internal static string CSharpWarnings_CS0436 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0436", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} in {1} conflicts with the imported namespace {2} in {3}. Using the type defined in {1}..
        /// </summary>
        internal static string CSharpWarnings_CS0437 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0437", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defining an alias named &apos;global&apos; is ill-advised since &apos;global::&apos; always references the global namespace and not an alias.
        /// </summary>
        internal static string CSharpWarnings_CS0440 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0440", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type {0} was not found in {1} but was found in {2}.
        /// </summary>
        internal static string CSharpWarnings_CS0444 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0444", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always &apos;null&apos; of type {0}.
        /// </summary>
        internal static string CSharpWarnings_CS0458 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0458", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing with null of type {0} always produces &apos;false&apos;.
        /// </summary>
        internal static string CSharpWarnings_CS0464 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0464", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introducing a &apos;Finalize&apos; method can interfere with destructor invocation. Did you intend to declare a destructor?.
        /// </summary>
        internal static string CSharpWarnings_CS0465 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0465", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguity between method {0} and non-method {1}. Using method group..
        /// </summary>
        internal static string CSharpWarnings_CS0467 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0467", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} value is not implicitly convertible to type {1}.
        /// </summary>
        internal static string CSharpWarnings_CS0469 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0469", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always {0} since a value of type {1} is never equal to &apos;null&apos; of type {1}.
        /// </summary>
        internal static string CSharpWarnings_CS0472 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0472", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The feature {0} is deprecated. Please use {1} instead.
        /// </summary>
        internal static string CSharpWarnings_CS0602 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0602", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is obsolete.
        /// </summary>
        internal static string CSharpWarnings_CS0612 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0612", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is obsolete: {1}.
        /// </summary>
        internal static string CSharpWarnings_CS0618 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0618", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method, operator, or accessor {0} is marked external and has no attributes on it. Consider adding a DllImport attribute to specify the external implementation.
        /// </summary>
        internal static string CSharpWarnings_CS0626 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0626", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : new protected member declared in sealed class.
        /// </summary>
        internal static string CSharpWarnings_CS0628 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0628", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible mistaken empty statement.
        /// </summary>
        internal static string CSharpWarnings_CS0642 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0642", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {0} is never assigned to, and will always have its default value {1}.
        /// </summary>
        internal static string CSharpWarnings_CS0649 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0649", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison to integral constant is useless; the constant is outside the range of type {0}.
        /// </summary>
        internal static string CSharpWarnings_CS0652 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0652", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid attribute location for this declaration. Valid attribute locations for this declaration are {1}. All attributes in this block will be ignored..
        /// </summary>
        internal static string CSharpWarnings_CS0657 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0657", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a recognized attribute location. All attributes in this block will be ignored..
        /// </summary>
        internal static string CSharpWarnings_CS0658 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0658", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} overrides Object.Equals(object o) but does not override Object.GetHashCode().
        /// </summary>
        internal static string CSharpWarnings_CS0659 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0659", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} defines operator == or operator != but does not override Object.Equals(object o).
        /// </summary>
        internal static string CSharpWarnings_CS0660 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0660", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} defines operator == or operator != but does not override Object.GetHashCode().
        /// </summary>
        internal static string CSharpWarnings_CS0661 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0661", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment in conditional expression is always constant; did you mean to use &apos;==&apos; instead of &apos;=&apos;?.
        /// </summary>
        internal static string CSharpWarnings_CS0665 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0665", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member {0} overrides obsolete member &apos;{1}. Add the Obsolete attribute to {0}.
        /// </summary>
        internal static string CSharpWarnings_CS0672 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0672", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first.
        /// </summary>
        internal static string CSharpWarnings_CS0675 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0675", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter {0} has the same name as the type parameter from outer type {1}.
        /// </summary>
        internal static string CSharpWarnings_CS0693 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0693", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possibly incorrect assignment to local {0} which is the argument to a using or lock statement. The Dispose call or unlocking will happen on the original value of the local..
        /// </summary>
        internal static string CSharpWarnings_CS0728 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0728", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obsolete member {0} overrides non-obsolete member {1}..
        /// </summary>
        internal static string CSharpWarnings_CS0809 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0809", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor {0} is marked external..
        /// </summary>
        internal static string CSharpWarnings_CS0824 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS0824", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #warning: {0}.
        /// </summary>
        internal static string CSharpWarnings_CS1030 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1030", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous catch clause already catches all exceptions. All exceptions thrown will be wrapped in a System.Runtime.CompilerServices.RuntimeWrappedException.
        /// </summary>
        internal static string CSharpWarnings_CS1058 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1058", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of possibly unassigned field &apos;name&apos;. Struct instance variables are initially unassigned if struct is unassigned..
        /// </summary>
        internal static string CSharpWarnings_CS1060 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1060", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty switch block.
        /// </summary>
        internal static string CSharpWarnings_CS1522 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1522", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has badly formed XML — {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1570 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1570", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has a duplicate param tag for {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1571 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1571", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has a param tag for {1}, but there is no parameter by that name.
        /// </summary>
        internal static string CSharpWarnings_CS1572 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1572", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} has no matching param tag in the XML comment for {0} (but other parameters do).
        /// </summary>
        internal static string CSharpWarnings_CS1573 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1573", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has syntactically incorrect cref attribute {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1574 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1574", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type for parameter {0} in XML comment cref attribute.
        /// </summary>
        internal static string CSharpWarnings_CS1580 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1580", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid return type in XML comment cref attribute.
        /// </summary>
        internal static string CSharpWarnings_CS1581 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1581", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has syntactically incorrect cref attribute {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1584 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1584", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment is not placed on a valid language element.
        /// </summary>
        internal static string CSharpWarnings_CS1587 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1587", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to include XML fragment {0} of file {1} -- {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1589 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1589", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid XML include element -- Missing file attribute.
        /// </summary>
        internal static string CSharpWarnings_CS1590 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1590", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing XML comment for publicly visible type or member {0}.
        /// </summary>
        internal static string CSharpWarnings_CS1591 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1591", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Badly formed XML in included comments file -- {0}.
        /// </summary>
        internal static string CSharpWarnings_CS1592 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1592", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML parser could not be loaded for the following reason: {0}. The XML documentation file {1} will not be generated..
        /// </summary>
        internal static string CSharpWarnings_CS1598 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1598", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly generation -- {0}.
        /// </summary>
        internal static string CSharpWarnings_CS1607 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1607", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete temporary file {0} used for default Win32 resource -- {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1610 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1610", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option {0} overrides attribute {1} given in a source file or added module.
        /// </summary>
        internal static string CSharpWarnings_CS1616 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1616", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized #pragma directive.
        /// </summary>
        internal static string CSharpWarnings_CS1633 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1633", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected disable or restore.
        /// </summary>
        internal static string CSharpWarnings_CS1634 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1634", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot restore warning {0} because it was disabled globally.
        /// </summary>
        internal static string CSharpWarnings_CS1635 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1635", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature {0} is not part of the standardized ISO C# language specification, and may not be accepted by other compilers.
        /// </summary>
        internal static string CSharpWarnings_CS1645 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1645", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}. See also error: {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1658 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1658", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid search path &apos;path&apos; specified in {0} -- {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1668 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1668", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to type {0} claims it is nested within {1}, but it could not be found.
        /// </summary>
        internal static string CSharpWarnings_CS1682 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1682", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to type {0} claims it is defined in this assembly, but it is not defined in source or any added modules.
        /// </summary>
        internal static string CSharpWarnings_CS1683 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1683", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to type {0} claims it is defined in {1}, but it could not be found.
        /// </summary>
        internal static string CSharpWarnings_CS1684 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1684", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The predefined type {0} is defined in multiple assemblies in the global alias; using definition from {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1685 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1685", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file has exceeded the limit of 16,707,565 lines representable in the PDB, debug information will be incorrect.
        /// </summary>
        internal static string CSharpWarnings_CS1687 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1687", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessing a member on {0} may cause a runtime exception because it is a field of a marshal-by-reference class.
        /// </summary>
        internal static string CSharpWarnings_CS1690 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1690", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid warning number.
        /// </summary>
        internal static string CSharpWarnings_CS1691 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1691", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number.
        /// </summary>
        internal static string CSharpWarnings_CS1692 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1692", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid filename specified for preprocessor directive. Filename is too long or not a valid filename..
        /// </summary>
        internal static string CSharpWarnings_CS1694 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1694", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid #pragma checksum syntax; should be #pragma checksum &quot;&quot;filename&quot;&quot; &quot;&quot;{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}&quot;&quot; &quot;&quot;XXXX...&quot;&quot;.
        /// </summary>
        internal static string CSharpWarnings_CS1695 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1695", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single-line comment or end-of-line expected.
        /// </summary>
        internal static string CSharpWarnings_CS1696 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1696", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Different checksum values given for {0}.
        /// </summary>
        internal static string CSharpWarnings_CS1697 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1697", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular assembly reference {0} does not match the output assembly name {1}. Try adding a reference to {0} or changing the output assembly name to match..
        /// </summary>
        internal static string CSharpWarnings_CS1698 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1698", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use command line option {0} or appropriate project settings instead of {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1699 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1699", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly reference Assembly Name is invalid and cannot be resolved.
        /// </summary>
        internal static string CSharpWarnings_CS1700 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1700", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assuming assembly reference {0} matches {1}, you may need to supply runtime policy .
        /// </summary>
        internal static string CSharpWarnings_CS1701 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1701", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assuming assembly reference {0} matches {1}, you may need to supply runtime policy.
        /// </summary>
        internal static string CSharpWarnings_CS1702 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1702", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate {0} bound to {1} instead of {2} because of new language rules.
        /// </summary>
        internal static string CSharpWarnings_CS1707 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1707", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filename specified for preprocessor directive is empty.
        /// </summary>
        internal static string CSharpWarnings_CS1709 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1709", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has a duplicate typeparam tag for {1}.
        /// </summary>
        internal static string CSharpWarnings_CS1710 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1710", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has a typeparam tag for {1}, but there is no type parameter by that name.
        /// </summary>
        internal static string CSharpWarnings_CS1711 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1711", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter {0} has no matching typeparam tag in the XML comment on {1} (but other type parameters do).
        /// </summary>
        internal static string CSharpWarnings_CS1712 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1712", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment made to same variable; did you mean to assign something else?.
        /// </summary>
        internal static string CSharpWarnings_CS1717 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1717", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison made to same variable; did you mean to compare something else?.
        /// </summary>
        internal static string CSharpWarnings_CS1718 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1718", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression will always cause a System.NullReferenceException because the default value of {0} is null.
        /// </summary>
        internal static string CSharpWarnings_CS1720 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1720", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on {0} has cref attribute {1} that refers to a type parameter.
        /// </summary>
        internal static string CSharpWarnings_CS1723 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1723", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to member {0} through a &apos;base&apos; keyword from an anonymous method, lambda expression, query expression, or iterator results in unverifiable code. Consider moving the access into a helper method on the containing type..
        /// </summary>
        internal static string CSharpWarnings_CS1911 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1911", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring /win32manifest for module because it only applies to assemblies..
        /// </summary>
        internal static string CSharpWarnings_CS1927 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1927", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member {0} implements interface member {0} in type {1}. There are multiple matches for the interface member at run-time. It is implementation dependent which method will be called..
        /// </summary>
        internal static string CSharpWarnings_CS1956 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1956", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member {0} overrides {1}. There are multiple override candidates at run-time. It is implementation dependent which method will be called..
        /// </summary>
        internal static string CSharpWarnings_CS1957 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS1957", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file {0} specified multiple times.
        /// </summary>
        internal static string CSharpWarnings_CS2002 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS2002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiler option {0} is obsolete, please use {1} instead.
        /// </summary>
        internal static string CSharpWarnings_CS2014 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS2014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring /noconfig option because it was specified in a response file.
        /// </summary>
        internal static string CSharpWarnings_CS2023 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS2023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for &apos;/define&apos;; {0} is not a valid identifier.
        /// </summary>
        internal static string CSharpWarnings_CS2029 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS2029", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods with variable arguments are not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3000 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument type {0} is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3001 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return type of {0} is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3002 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3002", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of {0} is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3003 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3003", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mixed and decomposed Unicode characters are not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3004 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3004", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier {0} differing only in case is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3005 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded method {0} differing only in ref or out, or in array rank, is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3006 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded method {0} differing only by unnamed array types is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3007 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3007", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier {0} differing only in case is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3008 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: base type {0} is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3009 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3009", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: CLS-compliant interfaces must have only CLS-compliant members.
        /// </summary>
        internal static string CSharpWarnings_CS3010 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3010", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: only CLS-compliant members can be abstract.
        /// </summary>
        internal static string CSharpWarnings_CS3011 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot specify the CLSCompliant attribute on a module that differs from the CLSCompliant attribute on the assembly.
        /// </summary>
        internal static string CSharpWarnings_CS3012 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3012", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added modules must be marked with the CLSCompliant attribute to match the assembly.
        /// </summary>
        internal static string CSharpWarnings_CS3013 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string CSharpWarnings_CS3014 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3014", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has no accessible constructors which use only CLS-compliant types.
        /// </summary>
        internal static string CSharpWarnings_CS3015 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays as attribute arguments is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3016 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3016", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot specify the CLSCompliant attribute on a module that differs from the CLSCompliant attribute on the assembly.
        /// </summary>
        internal static string CSharpWarnings_CS3017 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be marked as CLS-Compliant because it is a member of non CLS-compliant type {1}.
        /// </summary>
        internal static string CSharpWarnings_CS3018 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3018", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS compliance checking will not be performed on {0} because it is not visible from outside this assembly..
        /// </summary>
        internal static string CSharpWarnings_CS3019 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string CSharpWarnings_CS3021 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3021", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLSCompliant attribute has no meaning when applied to parameters. Try putting it on the method instead..
        /// </summary>
        internal static string CSharpWarnings_CS3022 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLSCompliant attribute has no meaning when applied to return types. Try putting it on the method instead..
        /// </summary>
        internal static string CSharpWarnings_CS3023 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3023", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS-compliant field {0} cannot be volatile.
        /// </summary>
        internal static string CSharpWarnings_CS3026 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3026", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not CLS-compliant because base interface {1} is not CLS-compliant.
        /// </summary>
        internal static string CSharpWarnings_CS3027 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS3027", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown compiler option {0}.
        /// </summary>
        internal static string CSharpWarnings_CS5000 {
            get {
                return ResourceManager.GetString("CSharpWarnings_CS5000", resourceCulture);
            }
        }
    }
}
