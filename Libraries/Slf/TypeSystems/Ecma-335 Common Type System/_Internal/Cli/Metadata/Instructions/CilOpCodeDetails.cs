using AllenCopeland.Abstraction.Slf.Cli.Metadata;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AllenCopeland.Abstraction.Slf._Internal.Cli.Metadata.Instructions
{
    internal static class CilOpCodeDetails
    {
        internal static readonly CilOpCodeDetailDictionary OpcodeDetails = new CilOpCodeDetailDictionary
        {
            { CilOpcodeInstruction.NoOperation, "nop", 0x00 },
            { CilOpcodeInstruction.Break, "break", 0x01 },
            { CilOpcodeInstruction.LoadArg0, "ldarg.0", 0x02 },
            { CilOpcodeInstruction.LoadArg1, "ldarg.1", 0x03 },
            { CilOpcodeInstruction.LoadArg2, "ldarg.2", 0x04 },
            { CilOpcodeInstruction.LoadArg3, "ldarg.3", 0x05 },
            { CilOpcodeInstruction.LoadLocal0, "ldloc.0", 0x06 },
            { CilOpcodeInstruction.LoadLocal1, "ldloc.1", 0x07 },
            { CilOpcodeInstruction.LoadLocal2, "ldloc.2", 0x08 },
            { CilOpcodeInstruction.LoadLocal3, "ldloc.3", 0x09 },
            { CilOpcodeInstruction.StoreLocal0, "stloc.0", 0x0A },
            { CilOpcodeInstruction.StoreLocal1, "stloc.1", 0x0B },
            { CilOpcodeInstruction.StoreLocal2, "stloc.2", 0x0C },
            { CilOpcodeInstruction.StoreLocal3, "stloc.3", 0x0D },
            { CilOpcodeInstruction.LoadArgumentShortForm, "ldarg.s", 0x0E },
            { CilOpcodeInstruction.LoadArgumentAddressShortForm, "ldarga.s", 0x0F },
            { CilOpcodeInstruction.StoreArgumentShortForm, "starg.s", 0x10 },
            { CilOpcodeInstruction.LoadLocalShortForm, "ldloc.s", 0x11 },
            { CilOpcodeInstruction.LoadLocalAddressShortForm, "ldloca.s", 0x12 },
            { CilOpcodeInstruction.StoreLocalShortForm, "stloc.s", 0x13 },
            { CilOpcodeInstruction.LoadNullValue, "ldnull", 0x14 },
            { CilOpcodeInstruction.LoadInt32ConstantOfMinusOne, "ldc.i4.m1", 0x15 },
            { CilOpcodeInstruction.LoadInt32ConstantOfZero, "ldc.i4.0", 0x16 },
            { CilOpcodeInstruction.LoadInt32ConstantOfOne, "ldc.i4.1", 0x17 },
            { CilOpcodeInstruction.LoadInt32ConstantOfTwo, "ldc.i4.2", 0x18 },
            { CilOpcodeInstruction.LoadInt32ConstantOfThree, "ldc.i4.3", 0x19 },
            { CilOpcodeInstruction.LoadInt32ConstantOfFour, "ldc.i4.4", 0x1A },
            { CilOpcodeInstruction.LoadInt32ConstantOfFive, "ldc.i4.5", 0x1B },
            { CilOpcodeInstruction.LoadInt32ConstantOfSix, "ldc.i4.6", 0x1C },
            { CilOpcodeInstruction.LoadInt32ConstantOfSeven, "ldc.i4.7 ", 0x1D },
            { CilOpcodeInstruction.LoadInt32ConstantOfEight, "ldc.i4.8", 0x1E },
            { CilOpcodeInstruction.LoadInt32ConstantShortForm, "ldc.i4.s", 0x1F },
            { CilOpcodeInstruction.LoadInt32Constant, "ldc.i4", 0x20 },
            { CilOpcodeInstruction.LoadInt64Constant, "ldc.i8", 0x21 },
            { CilOpcodeInstruction.LoadSingleConstant, "ldc.r4", 0x22 },
            { CilOpcodeInstruction.LoadDoubleConstant, "ldc.r8", 0x23 },
            { CilOpcodeInstruction.DuplicateStackItem, "dup", 0x25 },
            { CilOpcodeInstruction.PopStackItem, "pop", 0x26 },
            { CilOpcodeInstruction.JumpTo, "jmp", 0x27 },
            { CilOpcodeInstruction.CallMethod, "call", 0x28 },
            { CilOpcodeInstruction.CallMethodIndirect, "calli", 0x29 },
            { CilOpcodeInstruction.Return, "ret", 0x2A },
            { CilOpcodeInstruction.UnconditionalBranchShortForm, "br.s", 0x2B },
            { CilOpcodeInstruction.BranchIfFalseShortForm, "brfalse.s", 0x2C },
            { CilOpcodeInstruction.BranchIfTrueShortForm, "brtrue.s", 0x2D },
            { CilOpcodeInstruction.BranchIfEqualToShortForm, "beq.s", 0x2E },
            { CilOpcodeInstruction.BranchIfGreaterThanOrEqualToShortForm, "bge.s", 0x2F },
            { CilOpcodeInstruction.BranchIfGreaterThanShortForm, "bgt.s", 0x30 },
            { CilOpcodeInstruction.BranchIfLessThanOrEqualToShortForm, "ble.s", 0x31 },
            { CilOpcodeInstruction.BranchIfLessThanShortForm, "blt.s", 0x32 },
            { CilOpcodeInstruction.BranchIfNotEqualToUnSignedOrOrderedShortForm, "bne.un.s", 0x33 },
            { CilOpcodeInstruction.BranchIfGreaterThanOrEqualToUnSignedOrOrderedShortForm, "bge.un.s", 0x34 },
            { CilOpcodeInstruction.BranchIfGreaterThanUnSignedOrOrderedShortForm, "bgt.un.s", 0x35 },
            { CilOpcodeInstruction.BranchIfLessThanOrEqualToUnSignedOrOrderedShortForm, "ble.un.s", 0x36 },
            { CilOpcodeInstruction.BranchIfLessThanUnSignedOrOrderedShortForm, "blt.un.s", 0x37 },
            { CilOpcodeInstruction.UnconditionalBranch, "br", 0x38 },
            { CilOpcodeInstruction.BranchIfFalse, "brfalse", 0x39 },
            { CilOpcodeInstruction.BranchIfTrue, "brtrue", 0x3A },
            { CilOpcodeInstruction.BranchIfEqualTo, "beq", 0x3B },
            { CilOpcodeInstruction.BranchIfGreaterThanOrEqualTo, "bge", 0x3C },
            { CilOpcodeInstruction.BranchIfGreaterThan, "bgt", 0x3D },
            { CilOpcodeInstruction.BranchIfLessThanOrEqualTo, "ble", 0x3E },
            { CilOpcodeInstruction.BranchIfLessThan, "blt", 0x3F },
            { CilOpcodeInstruction.BranchIfNotEqualToUnSignedOrOrdered, "bne.un", 0x40 },
            { CilOpcodeInstruction.BranchIfGreaterThanOrEqualToUnSignedOrOrdered, "bge.un", 0x41 },
            { CilOpcodeInstruction.BranchIfGreaterThanUnSignedOrOrdered, "bgt.un", 0x42 },
            { CilOpcodeInstruction.BranchIfLessThanOrEqualToUnSignedOrOrdered, "ble.un", 0x43 },
            { CilOpcodeInstruction.BranchIfLessThanUnSignedOrOrdered, "blt.un", 0x44 },
            { CilOpcodeInstruction.Switch, "switch", 0x45 },
            { CilOpcodeInstruction.LoadIndirectSByte, "ldind.i1", 0x46 },
            { CilOpcodeInstruction.LoadIndirectByte, "ldind.u1", 0x47 },
            { CilOpcodeInstruction.LoadIndirectInt16, "ldind.i2", 0x48 },
            { CilOpcodeInstruction.LoadIndirectUInt16, "ldind.u2", 0x49 },
            { CilOpcodeInstruction.LoadIndirectInt32, "ldind.i4", 0x4A },
            { CilOpcodeInstruction.LoadIndirectUInt32, "ldind.u4", 0x4B },
            { CilOpcodeInstruction.LoadIndirectInt64OrUInt64, "ldind.i8 /* ldind.u8*/", 0x4C },
            { CilOpcodeInstruction.LoadIndirectNativeInteger, "ldind.i", 0x4D },
            { CilOpcodeInstruction.LoadIndirectSingle, "ldind.r4", 0x4E },
            { CilOpcodeInstruction.LoadIndirectDouble, "ldind.r8", 0x4F },
            { CilOpcodeInstruction.LoadIndirectReference, "ldind.ref", 0x50 },
            { CilOpcodeInstruction.StoreIndirectReference, "stind.ref", 0x51 },
            { CilOpcodeInstruction.StoreIndirectSByte, "stind.i1", 0x52 },
            { CilOpcodeInstruction.StoreIndirectInt16, "stind.i2", 0x53 },
            { CilOpcodeInstruction.StoreIndirectInt32, "stind.i4", 0x54 },
            { CilOpcodeInstruction.StoreIndirectInt64, "stind.i8", 0x55 },
            { CilOpcodeInstruction.StoreIndirectSingle, "stind.r4", 0x56 },
            { CilOpcodeInstruction.StoreIndirectDouble, "stind.r8", 0x57 },
            { CilOpcodeInstruction.Add, "add", 0x58 },
            { CilOpcodeInstruction.Subtract, "sub", 0x59 },
            { CilOpcodeInstruction.Multiply, "mul ", 0x5A },
            { CilOpcodeInstruction.Divide, "div", 0x5B },
            { CilOpcodeInstruction.DivideUnSignedOrOrdered, "div.un", 0x5C },
            { CilOpcodeInstruction.Remainder, "rem ", 0x5D },
            { CilOpcodeInstruction.RemainderUnSignedOrOrdered, "rem.un ", 0x5E },
            { CilOpcodeInstruction.BitwiseAnd, "and ", 0x5F },
            { CilOpcodeInstruction.BitwiseOr, "or ", 0x60 },
            { CilOpcodeInstruction.BitwiseExclusiveOr, "xor", 0x61 },
            { CilOpcodeInstruction.ShiftBitsLeft, "shl", 0x62 },
            { CilOpcodeInstruction.ShiftBitsRight, "shr", 0x63 },
            { CilOpcodeInstruction.ShiftBitsRightUnSignedOrOrdered, "shr.un", 0x64 },
            { CilOpcodeInstruction.Negate, "neg", 0x65 },
            { CilOpcodeInstruction.BitwiseComplement, "not", 0x66 },
            { CilOpcodeInstruction.UncheckedConvertToSByte, "conv.i1", 0x67 },
            { CilOpcodeInstruction.UncheckedConvertToInt16, "conv.i2", 0x68 },
            { CilOpcodeInstruction.UncheckedConvertToInt32, "conv.i4", 0x69 },
            { CilOpcodeInstruction.UncheckedConvertToInt64, "conv.i8", 0x6A },
            { CilOpcodeInstruction.UncheckedConvertToSingle, "conv.r4", 0x6B },
            { CilOpcodeInstruction.UncheckedConvertToDouble, "conv.r8", 0x6C },
            { CilOpcodeInstruction.UncheckedConvertToUInt32, "conv.u4", 0x6D },
            { CilOpcodeInstruction.UncheckedConvertToUInt64, "conv.u8", 0x6E },
            { CilOpcodeInstruction.CallVirtualMethod, "callvirt", 0x6F },
            { CilOpcodeInstruction.AddressCopy, "cpobj", 0x70 },
            { CilOpcodeInstruction.LoadObject, "ldobj", 0x71 },
            { CilOpcodeInstruction.LoadString, "ldstr", 0x72 },
            { CilOpcodeInstruction.NewObject, "newobj", 0x73 },
            { CilOpcodeInstruction.CastClass, "castclass", 0x74 },
            { CilOpcodeInstruction.IsInstance, "isinst", 0x75 },
            { CilOpcodeInstruction.ConvertUnsignedIntToFloatingPoint, "conv.r.un", 0x76 },
            { CilOpcodeInstruction.Unbox, "unbox", 0x79 },
            { CilOpcodeInstruction.ThrowException, "throw", 0x7A },
            { CilOpcodeInstruction.LoadField, "ldfld", 0x7B },
            { CilOpcodeInstruction.LoadFieldAddress, "ldflda", 0x7C },
            { CilOpcodeInstruction.StoreField, "stfld", 0x7D },
            { CilOpcodeInstruction.LoadStaticField, "ldsfld", 0x7E },
            { CilOpcodeInstruction.LoadStaticFieldAddress, "ldsflda", 0x7F },
            { CilOpcodeInstruction.StoreStaticField, "stsfld", 0x80 },
            { CilOpcodeInstruction.StoreObject, "stobj", 0x81 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToSByteAsInt32, "conv.ovf.i1.un", 0x82 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToInt16AsInt32, "conv.ovf.i2.un", 0x83 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToInt32AsInt32, "conv.ovf.i4.un", 0x84 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToInt64, "conv.ovf.i8.un", 0x85 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToByteAsInt32, "conv.ovf.u1.un", 0x86 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToUInt16AsInt32, "conv.ovf.u2.un", 0x87 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToUInt32AsInt32, "conv.ovf.u4.un", 0x88 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToUInt64AsInt64, "conv.ovf.u8.un", 0x89 },
            { CilOpcodeInstruction.CheckedConvertUnsignedToNativeInt, "conv.ovf.i.un", 0x8A },
            { CilOpcodeInstruction.CheckedConvertUnsignedToNativeUInt, "conv.ovf.u.un", 0x8B },
            { CilOpcodeInstruction.Box, "box", 0x8C },
            { CilOpcodeInstruction.NewArray, "newarr", 0x8D },
            { CilOpcodeInstruction.LoadArrayLength, "ldlen", 0x8E },
            { CilOpcodeInstruction.LoadArrayElementAddress, "ldelema", 0x8F },
            { CilOpcodeInstruction.LoadArrayElementAsSByte, "ldelem.i1", 0x90 },
            { CilOpcodeInstruction.LoadArrayElementAsByte, "ldelem.u1", 0x91 },
            { CilOpcodeInstruction.LoadArrayElementAsInt16, "ldelem.i2", 0x92 },
            { CilOpcodeInstruction.LoadArrayElementAsUInt16, "ldelem.u2", 0x93 },
            { CilOpcodeInstruction.LoadArrayElementAsInt32, "ldelem.i4", 0x94 },
            { CilOpcodeInstruction.LoadArrayElementAsUInt32, "ldelem.u4", 0x95 },
            { CilOpcodeInstruction.LoadArrayElementAsInt64, "ldelem.i8 or ldelem.u8", 0x96 },
            { CilOpcodeInstruction.LoadArrayElementAsNativeInteger, "ldelem.i", 0x97 },
            { CilOpcodeInstruction.LoadArrayElementAsSingle, "ldelem.r4", 0x98 },
            { CilOpcodeInstruction.LoadArrayElementAsDouble, "ldelem.r8", 0x99 },
            { CilOpcodeInstruction.LoadArrayElementReference, "ldelem.ref", 0x9A },
            { CilOpcodeInstruction.StoreNativeIntegerArrayElement, "stelem.i", 0x9B },
            { CilOpcodeInstruction.StoreSByteArrayElement, "stelem.i1", 0x9C },
            { CilOpcodeInstruction.StoreInt16ArrayElement, "stelem.i2", 0x9D },
            { CilOpcodeInstruction.StoreInt32ArrayElement, "stelem.i4", 0x9E },
            { CilOpcodeInstruction.StoreInt64ArrayElement, "stelem.i8", 0x9F },
            { CilOpcodeInstruction.StoreSingleArrayElement, "stelem.r4", 0xA0 },
            { CilOpcodeInstruction.StoreDoubleArrayElement, "stelem.r8", 0xA1 },
            { CilOpcodeInstruction.StoreReferenceArrayElement, "stelem.ref", 0xA2 },
            { CilOpcodeInstruction.LoadElement, "ldelem", 0xA3 },
            { CilOpcodeInstruction.StoreElement, "stelem", 0xA4 },
            { CilOpcodeInstruction.UnboxAny, "unbox.any", 0xA5 },
            { CilOpcodeInstruction.CheckedConvertToSByteAsInt32, "conv.ovf.i1", 0xB3 },
            { CilOpcodeInstruction.CheckedConvertToByteAsInt32, "conv.ovf.u1", 0xB4 },
            { CilOpcodeInstruction.CheckedConvertToInt16AsInt32, "conv.ovf.i2", 0xB5 },
            { CilOpcodeInstruction.CheckedConvertToUInt16AsInt32, "conv.ovf.u2", 0xB6 },
            { CilOpcodeInstruction.CheckedConvertToInt32AsInt32, "conv.ovf.i4", 0xB7 },
            { CilOpcodeInstruction.CheckedConvertToUInt32AsInt32, "conv.ovf.u4", 0xB8 },
            { CilOpcodeInstruction.CheckedConvertToInt64, "conv.ovf.i8", 0xB9 },
            { CilOpcodeInstruction.CheckedConvertToUInt64AsInt64, "conv.ovf.u8", 0xBA },
            { CilOpcodeInstruction.GetTypedReferenceAddress, "refanyval", 0xC2 },
            { CilOpcodeInstruction.CheckForFiniteNumber, "Ckfinite", 0xC3 },
            { CilOpcodeInstruction.MakeTypedReference, "mkrefany", 0xC6 },
            { CilOpcodeInstruction.LoadToken, "ldtoken", 0xD0 },
            { CilOpcodeInstruction.UncheckedConvertToUInt16, "conv.u2", 0xD1 },
            { CilOpcodeInstruction.UncheckedConvertToByte, "conv.u1", 0xD2 },
            { CilOpcodeInstruction.UncheckedConvertToNativeInteger, "conv.i", 0xD3 },
            { CilOpcodeInstruction.CheckedConvertToNativeInteger, "conv.ovf.i", 0xD4 },
            { CilOpcodeInstruction.CheckedConvertToUnsignedNativeInteger, "conv.ovf.u", 0xD5 },
            { CilOpcodeInstruction.CheckedAdd, "add.ovf", 0xD6 },
            { CilOpcodeInstruction.CheckedAddUnSignedOrOrdered, "add.ovf.un", 0xD7 },
            { CilOpcodeInstruction.CheckedMultiply, "mul.ovf", 0xD8 },
            { CilOpcodeInstruction.CheckedMultiplyUnSignedOrOrdered, "mul.ovf.un", 0xD9 },
            { CilOpcodeInstruction.CheckedSubtract, "sub.ovf", 0xDA },
            { CilOpcodeInstruction.CheckedSubtractUnSignedOrOrdered, "sub.ovf.un", 0xDB },
            { CilOpcodeInstruction.EndFinallyBlock, "endfault", 0xDC },
            { CilOpcodeInstruction.LeaveProtectedBlock, "endfinally", 0xDD },
            { CilOpcodeInstruction.LeaveProtectedBlockShortForm, "leave.s", 0xDE },
            { CilOpcodeInstruction.StoreIndirectNativeInteger, "stind.i", 0xDF },
            { CilOpcodeInstruction.UncheckedConvertToUnsignedNativeInteger, "conv.u", 0xE0 },
            { CilOpcodeInstruction.GetArgumentList, "arglist", 0xFE00 },
            { CilOpcodeInstruction.CompareEquality, "Ceq", 0xFE01 },
            { CilOpcodeInstruction.CompareGreaterThan, "Cgt", 0xFE02 },
            { CilOpcodeInstruction.CompareGreaterThanUnSignedOrOrdered, "Cgt.un", 0xFE03 },
            { CilOpcodeInstruction.CompareLessThan, "Clt", 0xFE04 },
            { CilOpcodeInstruction.CompareLessThanUnSignedOrOrdered, "Clt.Un", 0xFE05 },
            { CilOpcodeInstruction.LoadMethodPointer, "ldftn", 0xFE06 },
            { CilOpcodeInstruction.LoadVirtualMethodPointer, "ldvirtftn", 0xFE07 },
            { CilOpcodeInstruction.LoadArgument, "ldarg", 0xFE09 },
            { CilOpcodeInstruction.LoadArgumentAddress, "ldarga", 0xFE0A },
            { CilOpcodeInstruction.StoreArgument, "starg", 0xFE0B },
            { CilOpcodeInstruction.LoadLocal, "ldloc", 0xFE0C },
            { CilOpcodeInstruction.LoadLocalAddress, "ldloca", 0xFE0D },
            { CilOpcodeInstruction.StoreLocal, "stloc", 0xFE0E },
            { CilOpcodeInstruction.AllocateLocalMemory, "localloc", 0xFE0F },
            { CilOpcodeInstruction.EndFilter, "Endfilter", 0xFE11 },
            { CilOpcodeInstruction.PointerReferenceMayBeUnaligned, "unaligned.", 0xFE12 },
            { CilOpcodeInstruction.VolatilePointerReference, "volatile.", 0xFE13 },
            { CilOpcodeInstruction.TailCallModifier, "tail.", 0xFE14 },
            { CilOpcodeInstruction.InitializeObject, "initobj", 0xFE15 },
            { CilOpcodeInstruction.ConstrainedCallVirtModifier, "constrained.", 0xFE16 },
            { CilOpcodeInstruction.CopyMemoryBlock, "cpblk", 0xFE17 },
            { CilOpcodeInstruction.InitializeMemoryBlock, "initblk", 0xFE18 },
        };

        private static int? _longestInstructionTextLength;
        public static int LongestInstructionText { get { return (_longestInstructionTextLength ?? (_longestInstructionTextLength = (int?)OpcodeDetails.Values.Select(k => k.InstructionText.Length).Max())).Value; } }
    }
    internal class CilOpCodeDetailDictionary :
        Dictionary<CilOpcodeInstruction, CilOpCodeDetail>
    {
        public CilOpCodeDetail Add(CilOpcodeInstruction instruction, string originalName, int value)
        {
            var element = new CilOpCodeDetail { Instruction = instruction, OriginalName = originalName, Value = value };
            this.Add(instruction, element);
            return element;
        }
    }
    internal class CilOpCodeDetail
    {
        public CilOpcodeInstruction Instruction     { get; set; }
        public string               InstructionText { get { return this.Instruction.ToString().GenerateTitleCaseSpacedIdentifier(); } }
        public string               OriginalName    { get; set; }
        public int                  Value           { get; set; }
    }
}
