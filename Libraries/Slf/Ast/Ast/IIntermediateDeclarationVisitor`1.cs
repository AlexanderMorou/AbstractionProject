 /* ----------------------------------------------------------------\
 |  This code was generated by Allen Copeland's Abstraction.        |
 |  Version: 0.5.0.0                                                |
 |------------------------------------------------------------------|
 |  To ensure the code works properly,                              |
 |  please do not make any changes to the file.                     |
 |------------------------------------------------------------------|
 |  The specific language is C♯ (Runtime Version: 4.0.30319.42000)  |
 |  Sub-tool Name: C♯ Code Translator                               |
 |  Sub-tool Version: 1.0.0.0                                       |
 \---------------------------------------------------------------- */
namespace AllenCopeland.Abstraction.Slf.Ast
{
  /// <summary>
  /// Represents a basic visitor for intermediate declarations which yields a result of
  /// <typeparamref name="TResult"/>.
  /// </summary>
  /// <typeparam name="TResult">
  /// Denotes the type of result the members of the <see cref="AllenCopeland.Abstraction.Slf.Ast.IIntermediateDeclarationVisitor{TResult}"/>
  /// should yield.
  /// </typeparam>
  public interface IIntermediateDeclarationVisitor<TResult>
  {
    /// <summary>
    /// Returns a <typeparamref name="TResult"/> after it visits the <paramref name="intermediateDeclaration"/>
    /// provided.
    /// </summary>
    /// <param name="intermediateDeclaration">
    /// The <see cref="AllenCopeland.Abstraction.Slf.Ast.IIntermediateAssembly"/> relevant
    /// to the visit.
    /// </param>
    /// <returns>
    /// Returns the value of <typeparamref name="TResult"/> relative to the implementation
    /// of the visitor.
    /// </returns>
    TResult Visit(IIntermediateAssembly intermediateDeclaration);
    /// <summary>
    /// Returns a <typeparamref name="TResult"/> after it visits the <paramref name="intermediateDeclaration"/>
    /// provided.
    /// </summary>
    /// <param name="intermediateDeclaration">
    /// The <see cref="AllenCopeland.Abstraction.Slf.Ast.IIntermediateNamespaceDeclaration"/>
    /// relevant to the visit.
    /// </param>
    /// <returns>
    /// Returns the value of <typeparamref name="TResult"/> relative to the implementation
    /// of the visitor.
    /// </returns>
    TResult Visit(IIntermediateNamespaceDeclaration intermediateDeclaration);
  };
};
